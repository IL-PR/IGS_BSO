
// <ИГС> ПР Потылицын Г.С. #0020 {

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Наименование = "Обновить статусы из ДО"; 
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Информация = "Обработка позволяет синхронизировать статусы документов, таких как
	|""Заявка на Оплату"" или ""Реестры на Оплату"" из Документооборота. 
	|Автор: <ИГС> ПР Потылицын Г.С. #0020, 10.04.2025";
	
	// Команды 
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	
	НоваяКоманда.Представление = "Синхронизация";
	НоваяКоманда.Идентификатор = НоваяКоманда.Представление;
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	
	Возврат ПараметрыРегистрации;
	
КонецФункции       

Функция ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды = Неопределено) Экспорт
	
	Если ИдентификаторКоманды = "Синхронизация" Тогда
		
		// Подключение к ДО
		Попытка
			
			// <ИГС> ПР Потылицын Г.С. #0020 11.06.2025 {
			ВладелецДанных = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("РегистрСведений.игсНастройкиМеханизмов");

			ЛогинДО		= ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВладелецДанных, "ЛогинДО");
			ПарольДО	= ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ВладелецДанных, "ПарольДО");
			
			ПутьДОНастройка = ПредопределенноеЗначение(
			"ПланВидовХарактеристик.игсНастройкиМеханизмов.ПутьКWebСервисуДО");
			ПутьДО = игсНастройкиМеханизмовВызовСервера.ПолучитьЗначениеНастройки(
			ПутьДОНастройка, Справочники.Организации.ПустаяСсылка());
			
			Если НЕ ЗначениеЗаполнено(ПутьДО) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				"Путь к сервису ДО не указан. Пожалуйста, перейдите в ""Настройки механизмов"" и заполните" +
				"""Путь к web сервису ДО""!");
				Возврат Ложь;
			КонецЕсли;
			
			Определения = Новый	WSОпределения(ПутьДО, ЛогинДО, ПарольДО);
			// } </ИГС>;
			// <ИГС> ПР Потылицын Г.С. #0020 08.08.2025 {
			Прокси = Новый WSПрокси(Определения, "http://127.0.0.1", "igsFiles", "igsFilesSoap", , 15);
			// } </ИГС>
			Прокси.Пользователь = ЛогинДО;
			Прокси.Пароль = ПарольДО;

		Исключение
			Возврат Ложь;
		КонецПопытки;
	
		// Документ		- ЗаявкаНаОплату или РеестрНаОплату
		// ГУИД			- Уникальный идентификатор Документа
		// ЭтоЗаявка	- Разделяет Документы по типам
		// СтатусБСО	- Статус документа в текущей конфигурации
		// СтатусДО		- Статус документа из ДО
		// Автор		- Ответственное лицо, фигурирующее в заявке
		АктуальныеСтатусы = Новый ТаблицаЗначений;
		АктуальныеСтатусы.Колонки.Добавить("Документ");
		АктуальныеСтатусы.Колонки.Добавить("ГУИД");
		АктуальныеСтатусы.Колонки.Добавить("ЭтоЗаявка");
		АктуальныеСтатусы.Колонки.Добавить("СтатусБСО");
		АктуальныеСтатусы.Колонки.Добавить("СтатусДО");
		АктуальныеСтатусы.Колонки.Добавить("Автор");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	игсКазнаРегистрСостоянийСрезПоследних.Заявка КАК Заявка,
			|	игсКазнаРегистрСостоянийСрезПоследних.СостояниеЗаявки КАК СостояниеЗаявки,
			|	игсКазнаРегистрСостоянийСрезПоследних.Автор КАК Автор
			|ИЗ
			|	РегистрСведений.игсКазнаРегистрСостояний.СрезПоследних КАК игсКазнаРегистрСостоянийСрезПоследних
			|ГДЕ
			|	игсКазнаРегистрСостоянийСрезПоследних.СостояниеЗаявки = ЗНАЧЕНИЕ(Перечисление.игсСостоянияСогласования.НаСогласовании)";
			
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Стр = АктуальныеСтатусы.Добавить();
			Стр.Документ	= Выборка.Заявка;
			ГУИД			= Строка(Выборка.Заявка.УникальныйИдентификатор());
			Стр.ГУИД		= ГУИД;
			Стр.СтатусБСО	= Выборка.СостояниеЗаявки;
			Стр.Автор		= Выборка.Автор;
			Если ТипЗнч(Выборка.Заявка) = Тип("ДокументСсылка.игсЗаявкаНаОплату") Тогда
				Стр.СтатусДО	= Прокси.AgreementStatusPay(ГУИД);
				Стр.ЭтоЗаявка	= Истина;
			ИначеЕсли ТипЗнч(Выборка.Заявка) = Тип("ДокументСсылка.игсРеестрыНаОплату") Тогда
				Стр.СтатусДО	= Прокси.AgreementStatusMTO(ГУИД);
				Стр.ЭтоЗаявка	= Ложь;	
			КонецЕсли;
			
		КонецЦикла;
		
		// Статусы, которые синхронизируются с ДО
		НаСогласовании	= Перечисления.игсСостоянияСогласования.НаСогласовании;
		Согласован		= Перечисления.игсСостоянияСогласования.Согласован;
		Отклонена		= Перечисления.игсСостоянияСогласования.Отклонена;
		
		// Будет заполняться перечислением, сопаставляя информацию с ДО
		НовыйСтатус		= Перечисления.игсСостоянияСогласования.ПустаяСсылка();
		
		Для Каждого СтрокаДокумент Из АктуальныеСтатусы Цикл
			
			// Определение статуса из ДО
			Если СтрокаДокумент.СтатусДО = "Согласован" Тогда
				НовыйСтатус = Согласован;
			ИначеЕсли СтрокаДокумент.СтатусДО = "ЕстьЗамечания" Тогда
				НовыйСтатус = Отклонена;
			Иначе
				НовыйСтатус = НаСогласовании;	
			КонецЕсли;
			
			// Статус обновляется, если он "новый"
			Если СтрокаДокумент.СтатусБСО <> НовыйСтатус Тогда 
				Если СтрокаДокумент.ЭтоЗаявка Тогда
					
					Документы.игсЗаявкаНаОплату.ИзменитьСтатус(СтрокаДокумент.Документ, 
					СтрокаДокумент.Автор, НовыйСтатус);
					
				Иначе
					
					Документы.игсРеестрыНаОплату.ИзменитьСтатус(СтрокаДокумент.Документ,
					СтрокаДокумент.Автор, НовыйСтатус);
					
				КонецЕсли; 
			КонецЕсли;
					
			НовыйСтатус = Перечисления.игсСостоянияСогласования.ПустаяСсылка();
			
		КонецЦикла;
				
	КонецЕсли;
	
КонецФункции   

// } </ИГС>

