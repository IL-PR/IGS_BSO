
Функция СведенияОВнешнейОбработке() Экспорт 
	
	ПараметрыРегистрации 				= ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.3.0");
	ПараметрыРегистрации.Информация 	= НСтр("ru = 'Печать инвентаризации с артикулом поставщика.'");
	ПараметрыРегистрации.Вид 			= ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия 		= "1.2";
	ПараметрыРегистрации.Назначение.Добавить("Документ.ИнвентаризацияТоваровНаСкладе");
	
	Команда 							= ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление 				= НСтр("ru = 'Печать инвентаризации с артикулом поставщика'");
	Команда.Идентификатор 				= "ПечатьИнвентаризацииАртикулПоставщика";
	Команда.Использование 				= ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	Команда.ПоказыватьОповещение 		= Истина;
	Команда.Модификатор 				= "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
    ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПечатьИнвентаризацииАртикулПоставщика");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент 	= ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, Константы.ВалютаРегламентированногоУчета.Получить());
		ПечатнаяФорма.СинонимМакета 		= НСтр("ru = 'Инвентаризация товаров на складе'");  
		ПечатнаяФорма.ПолныйПутьКМакету 	= "Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИнвентаризацияТоваровНаСкладе";
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВыборкуШапок(МассивОбъектов) 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК Номер,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата,
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИнвентаризацияТоваровНаСкладе.Дата
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата
	|	КОНЕЦ КАК ДокументОснованиеДата,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер = """"
	|			ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, ИнвентаризацияТоваровНаСкладе.Номер)
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер
	|	КОНЕЦ КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
	|	ИнвентаризацияТоваровНаСкладе.Склад.Представление КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация1,
	|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
	|	ИнвентаризацияТоваровНаСкладе.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК ТоварКратко,
	|		ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.игсАртикулПоставщика КАК КодАртикул,
	|		СчетУчета КАК СубСчет,
	|		Количество КАК Количество,
	|		КоличествоУчет КАК КоличествоПоУчету,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаУчет КАК СуммаПоУчету
	|	) КАК Товары,
	|	ИнвентаризацияТоваровНаСкладе.ИнвентаризационнаяКомиссия.(
	|		НомерСтроки КАК НомерСтроки,
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия,
	|	ИнвентаризацияТоваровНаСкладе.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ИнвентаризацияТоваровНаСкладе.Организация = ДанныеПервичныхДокументов.Организация
	|			И ИнвентаризацияТоваровНаСкладе.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Дата,
	|	Ссылка,
	|	Председатель УБЫВ,
	|	ИнвентаризацияТоваровНаСкладе.Товары.НомерСтроки";  
	
	РезультатЗапроса 	= Запрос.Выполнить();
	ВыборкаРезультата 	= РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаРезультата;
	
КонецФункции

Функция ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)  
	
	ВалютаПечати = ВалютаРегламентированногоУчета; 
	
	Шапки = ПолучитьВыборкуШапок(МассивОбъектов); 
	
	ТабличныйДокумент 							= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб				= Истина;
	ТабличныйДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИнвентаризацияТоваровНаСкладе"; 
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	
	ПервыйДокумент = Истина; 
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить(); 
	
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;         
	
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;  
	
	Пока Шапки.Следующий() Цикл 
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;  
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1; 
		
		// Выводим шапку накладной
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапки, 
		"Инвентаризация товаров на складе");
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		// Выводим данные об организации и складе
		ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
		ОбластьПоставщик.Параметры.Заполнить(Шапки);
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапки.Организация, Шапки.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		
		ОбластьПоставщик.Параметры.ПредставлениеОрганизации 	= ПредставлениеОрганизации;
		ОбластьПоставщик.Параметры.ВалютаНаименование 			= Строка(ВалютаПечати);
		ОбластьПоставщик.Параметры.Валюта             			= ВалютаПечати;  
		
		ТабличныйДокумент.Вывести(ОбластьПоставщик);
		
		// Выводим шапку таблицы
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаСКодом");
		ОбластьШапка.Параметры.Заполнить(Шапки); 
		ОбластьШапка.Параметры.Колонка = "Код"; 
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;
		
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСКодом");
		
		ВыборкаСтрокТовары = Шапки.Товары.Выбрать();
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьСтрока.Параметры.Товар = ВыборкаСтрокТовары.Товар;
			
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока); 
			
		КонецЦикла; 
		
		// Вывести Итого
		ОбластьИтого                        = Макет.ПолучитьОбласть("Итого");
		ОбластьИтого.Параметры.Всего        = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммы);
		ОбластьИтого.Параметры.ВсегоПоУчету = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммыПоУчету);  
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		// Выводим подписи к документу
		ОбластьПодписи = Макет.ПолучитьОбласть("Подписи"); 
		
		ТабличныйДокумент.Вывести(ОбластьПодписи); 
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Шапки.Ссылка);
		
	КонецЦикла;	//Шапки.Следующий()
	
	Возврат ТабличныйДокумент;  
	
КонецФункции