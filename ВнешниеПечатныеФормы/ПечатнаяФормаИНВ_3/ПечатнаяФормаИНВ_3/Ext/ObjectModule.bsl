
Функция СведенияОВнешнейОбработке() Экспорт     
	
	ПараметрыРегистрации = Новый Структура; 
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ИнвентаризацияТоваровНаСкладе");
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");  
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ИНВ-3 (внешняя)");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", ""); 
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();  
	
	ДобавитьКоманду(ТаблицаКоманд, "ИНВ-3 (Внешняя без колонок 10-13)", "ИНВ3", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд() 
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", 			Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", 			Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", 			Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", 	Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", 			Новый ОписаниеТипов("Строка"));  
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда 						= ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление 			= Представление; 
	НоваяКоманда.Идентификатор 			= Идентификатор;
	НоваяКоманда.Использование 			= Использование;
	НоваяКоманда.ПоказыватьОповещение 	= ПоказыватьОповещение;
	НоваяКоманда.Модификатор 			= Модификатор; 
	
КонецПроцедуры

Функция Печать(МассивОбъектов, ПараметрыПечати, ОбъектыПечати, КоллекцияПечатныхФорм) экспорт 
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(ПараметрыПечати, "ИНВ3", НСтр("ru = 'ИНВ-3'"), 
			ПечатьИНВ3(МассивОбъектов, ОбъектыПечати,Справочники.Валюты.НайтиПоНаименованию("руб.")), ,);
			
КонецФункции

Функция ПолучитьВыборкуШапок(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК Номер,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата,
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИнвентаризацияТоваровНаСкладе.Дата
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата
	|	КОНЕЦ КАК ДокументОснованиеДата,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер = """"
	|			ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, ИнвентаризацияТоваровНаСкладе.Номер)
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер
	|	КОНЕЦ КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
	|	ИнвентаризацияТоваровНаСкладе.Склад.Представление КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация1,
	|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
	|	ИнвентаризацияТоваровНаСкладе.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК ТоварКратко,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Артикул
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Код
	|		КОНЕЦ КАК КодАртикул,
	|		СчетУчета КАК СубСчет,
	|		0 КАК Количество,
	|		0 КАК КоличествоПоУчету,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|		Цена КАК Цена,
	|		0 КАК Сумма,
	|		0 КАК СуммаПоУчету
	|	) КАК Товары,
	|	ИнвентаризацияТоваровНаСкладе.ИнвентаризационнаяКомиссия.(
	|		НомерСтроки КАК НомерСтроки,
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия,
	|	ИнвентаризацияТоваровНаСкладе.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ИнвентаризацияТоваровНаСкладе.Организация = ДанныеПервичныхДокументов.Организация
	|			И ИнвентаризацияТоваровНаСкладе.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Дата,
	|	Ссылка,
	|	Председатель УБЫВ,
	|	ИнвентаризацияТоваровНаСкладе.Товары.НомерСтроки"; 
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	РезультатЗапроса 	= Запрос.Выполнить();
	ВыборкаЗапроса 		= РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаЗапроса;

КонецФункции

Функция ПечатьИнв3(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)
	
	ВалютаПечати = ВалютаРегламентированногоУчета;
	
	Шапка = ПолучитьВыборкуШапок(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ3"; 
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИНВ3");
	
	ПервыйДокумент = Истина;  
	
	Пока Шапка.Следующий() Цикл  
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;   
		
		ПервыйДокумент = Ложь; 
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		ЧленКомиссии = Шапка.ИнвентаризационнаяКомиссия.Выбрать();   
		
		//////////////////////////////////////////////////////////////////////
		// 1-я страница формы
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакета.Параметры.ОрганизацияПоОКПО = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента = Шапка.Дата;
		ОбластьМакета.Параметры.НомерДокумента = Шапка.Номер;
		ОбластьМакета.Параметры.ДатаОкончанияИнвентаризацииЛокальныйФормат = Шапка.ДатаОкончанияИнвентаризации; 
		
		ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ОтветственноеЛицо, Шапка.Дата);
		ОбластьМакета.Параметры.ДолжностьМОЛ1 = ДанныеМОЛ.Должность;
		ОбластьМакета.Параметры.ФИОМОЛ1 = ДанныеМОЛ.Представление;
		ОбластьМакета.Параметры.Подразделение = Шапка.Склад;
			
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы

		ИтогФактКоличество 		= 0;
		ИтогФактСумма      		= 0;
		ИтогФактСуммаВсего 		= 0;
		ИтогБухКоличество  		= 0;
		ИтогБухСумма       		= 0;

		КолвоСтрокПоСтранице 	= 0;
		КолвоПоСтранице      	= 0;
		СуммаЛиста           	= 0;
		ИтогоКолво           	= 0;
		
		НомерСтраницы 			= 2;
	    Ном 					= 0;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		// Выводим многострочную часть документа
		ПодвалСтраницы  = Макет.ПолучитьОбласть("ПодвалСтраницы");	
			
		Пока ВыборкаСтрокТовары.Следующий() Цикл  
			
			Ном = Ном + 1;
			СтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалСтраницы);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
				ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

				ПараметрыОбласти.ИтогоФактКоличество = ИтогФактКоличество;
				ПараметрыОбласти.ИтогоФактСумма      = ИтогФактСумма;
				ПараметрыОбласти.ИтогоБухКоличество  = ИтогБухКоличество;
				ПараметрыОбласти.ИтогоБухСумма       = ИтогБухСумма;

				ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
				ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = "";
				ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = "";
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);

				ИтогФактКоличество 		= 0;
				ИтогФактСумма      		= 0;
				ИтогБухКоличество  		= 0;
				ИтогБухСумма       		= 0;

				КолвоСтрокПоСтранице 	= 0;
				КолвоПоСтранице      	= 0;
				СуммаЛиста           	= 0;

			КонецЕсли;

			СтрокаТаблицы.Параметры.Номер = Ном;
			СтрокаТаблицы.Параметры.ТоварНаименование = ?(ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар), ВыборкаСтрокТовары.Товар, ВыборкаСтрокТовары.ТоварКратко);

			ТабДокумент.Вывести(СтрокаТаблицы);

			ИтогФактКоличество 		= ИтогФактКоличество 	+ ВыборкаСтрокТовары.Количество;
			ИтогФактСумма      		= ИтогФактСумма      	+ ВыборкаСтрокТовары.Сумма;
			ИтогФактСуммаВсего 		= ИтогФактСуммаВсего 	+ ВыборкаСтрокТовары.Сумма;
			ИтогБухКоличество  		= ИтогБухКоличество  	+ ВыборкаСтрокТовары.КоличествоПоУчету;
			ИтогБухСумма       		= ИтогБухСумма       	+ ВыборкаСтрокТовары.СуммаПоУчету;
			ИтогоКолво         		= ИтогоКолво         	+ ВыборкаСтрокТовары.Количество;

			КолвоСтрокПоСтранице 	= КолвоСтрокПоСтранице 	+ 1;
			КолвоПоСтранице      	= КолвоПоСтранице      	+ ВыборкаСтрокТовары.Количество;
			СуммаЛиста           	= СуммаЛиста           	+ ВыборкаСтрокТовары.Сумма;

		КонецЦикла;

		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

		ПараметрыОбласти.ИтогоФактКоличество  = ИтогФактКоличество;
		ПараметрыОбласти.ИтогоФактСумма       = ИтогФактСумма;
		ПараметрыОбласти.ИтогоБухКоличество   = ИтогБухКоличество;
		ПараметрыОбласти.ИтогоБухСумма        = ИтогБухСумма;
		ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
		ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = "";
		ПараметрыОбласти.СуммаФактическиНаСтраницеПрописью                 = "";   
		
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Выводим подвал документа
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогФактСуммаВсего, ВалютаПечати);
		
		Инд = 1;  
		
		Пока ЧленКомиссии.Следующий() Цикл   
			
			ДанныеЧленаКомиссии = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, ЧленКомиссии.ФизЛицо, Шапка.Дата);   
			
			Если Инд <= 4 Тогда  
				
				Если ЧленКомиссии.Председатель Тогда
					ОбластьМакета.Параметры["ДолжностьПредседателя"] = ДанныеЧленаКомиссии.Должность;
					ОбластьМакета.Параметры["ФИОПредседателя"] = ДанныеЧленаКомиссии.Представление;
				Иначе
					ОбластьМакета.Параметры["ДолжностьЧленаКомиссии" + Инд] = ДанныеЧленаКомиссии.Должность;
					ОбластьМакета.Параметры["ФИОЧленаКомиссии" + Инд] = ДанныеЧленаКомиссии.Представление;
				КонецЕсли;
				
			Иначе    
				
				ТабДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("ДопЧленКомиссии");
	           	ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"] = ДанныеЧленаКомиссии.Должность;
				ОбластьМакета.Параметры["ФИОЧленаКомиссии"] = ДанныеЧленаКомиссии.Представление; 
				
			КонецЕсли; 
			
			Инд = Инд + 1;
			
		КонецЦикла;       
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписиМОЛ");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
			
		ОбластьМакета.Параметры.ДолжностьМОЛ1   = ДанныеМОЛ.Должность;
		ОбластьМакета.Параметры.ФИОМОЛ1         = ДанныеМОЛ.Представление;
		
		ОбластьМакета.Параметры.ДатаДокумента 	= Шапка.Дата;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции