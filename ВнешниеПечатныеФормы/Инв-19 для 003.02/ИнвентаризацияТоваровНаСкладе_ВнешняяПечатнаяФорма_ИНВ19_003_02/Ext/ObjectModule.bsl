Перем мВалютаРегламентированногоУчета;

Функция СведенияОВнешнейОбработке() Экспорт     
	
	ПараметрыРегистрации 	= Новый Структура; 
	
	МассивНазначений 		= Новый Массив;  
	МассивНазначений.Добавить("Документ.ИнвентаризацияТоваровНаСкладе"); 
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); 
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "ИНВ-19 003.02(Сличительная ведомость с графами 12-17 регулировка с даты документа инветаризации артикул поставщика) [v.24]"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", "");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "ИНВ-19 по 003.02 счету", "ИНВ19003.02", "ОткрытиеФормы", Истина, "ПечатьMXL"); 
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды 			= Новый ТаблицаЗначений;
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");  
	
	Команды.Колонки.Добавить("Представление", 			ОписаниеТиповСтрока);
	Команды.Колонки.Добавить("Идентификатор", 			ОписаниеТиповСтрока); 
	Команды.Колонки.Добавить("Использование", 			ОписаниеТиповСтрока); 
	Команды.Колонки.Добавить("ПоказыватьОповещение", 	Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", 			ОписаниеТиповСтрока); 
	
	Возврат Команды; 
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда 						= ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление 			= Представление; 
	НоваяКоманда.Идентификатор 			= Идентификатор;
	НоваяКоманда.Использование 			= Использование;
	НоваяКоманда.ПоказыватьОповещение 	= ПоказыватьОповещение;
	НоваяКоманда.Модификатор 			= Модификатор;
	
КонецПроцедуры

Функция Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИНВ19_12_17"; 
	
	НомерСтраницы = 2;          
	
	Для Каждого ЕдиницаДокумента Из МассивОбъектов Цикл
		
		ПечатьТабличногоДокумента(ТабДокумент, ЕдиницаДокумента.Значение, Ложь,	НомерСтраницы);
		
		Если МассивОбъектов.Количество() > 1 Тогда 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
	КонецЦикла; 
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ПечатьТабличногоДокумента(ТабДокумент, ЦелевойДокумент, Знач ТолькоОбороты = Ложь, НомерСтраницы)
	
	Если ТолькоОбороты = Истина Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли; 
	
	ВалютаПересчета = мВалютаРегламентированногоУчета;
	ЦелевойОбъект 	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЦелевойДокумент,"Дата, Товары, Склад, Номер",Истина);
	Параметры    	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаПересчета, ЦелевойОбъект.Дата);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЦелевойДокумент);
	
	Если Не ВыводитьНаПечать Тогда
		
		ТоварКод = "Код";
		Запрос.УстановитьПараметр("ВыводитьНаПечать", Истина);
		
	Иначе 
		
		ТоварКод = "Артикул поставщика";
		Запрос.УстановитьПараметр("ВыводитьНаПечать", Ложь);
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
		|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
		|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
		|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
		|	ИнвентаризацияТоваровНаСкладе.Склад КАК ПредставлениеСклада,
		|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации1,
		|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид
		|ИЗ
		|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
		|ГДЕ
		|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Запрос.УстановитьПараметр("Курс",            Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",       Параметры.Кратность);
	Запрос.УстановитьПараметр("ВидСкладаНТТ",    Перечисления.ТипыСкладов.НеавтоматизированнаяТорговаяТочка);
	Запрос.УстановитьПараметр("ДополнительнаяКолонка", Истина);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	Товары1.НомерСтроки КАК Номер,
		|	Номенклатура1.Ссылка КАК Номенклатура,
		|	ПОДСТРОКА(Номенклатура1.НаименованиеПолное, 1, 255) КАК ТоварНаименование,
		|	Номенклатура1.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|	КлассификаторЕдиницИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА &ВыводитьНаПечать
		|			ТОГДА КлассификаторЕдиницИзмерения.Код
		|		ИНАЧЕ Номенклатура1.игсАртикулПоставщика
		|	КОНЕЦ КАК ТоварКод,
		|	Товары1.Количество КАК ФактКоличество,
		|	Товары1.КоличествоУчет КАК БухКоличество,
		|	0 КАК Цена,
		|	ВЫБОР
		|		КОГДА Склады.ТипСклада = &ВидСкладаНТТ
		|			ТОГДА Товары1.Количество * Товары1.ЦенаВРознице
		|		ИНАЧЕ Товары1.Сумма * &Курс / &Кратность
		|	КОНЕЦ КАК ФактСумма,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияТоваровНаСкладе.Склад.ТипСклада = &ВидСкладаНТТ
		|			ТОГДА Товары1.КоличествоУчет * Товары1.ЦенаВРознице
		|		ИНАЧЕ Товары1.СуммаУчет * &Курс / &Кратность
		|	КОНЕЦ КАК БухСумма,
		|	Номенклатура1.игсАртикулПоставщика КАК игсАртикулПоставщика
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК Товары1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|			ПО Номенклатура1.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
		|		ПО Товары1.Номенклатура = Номенклатура1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|			ПО ИнвентаризацияТоваровНаСкладе.Склад = Склады.Ссылка
		|		ПО Товары1.Ссылка = ИнвентаризацияТоваровНаСкладе.Ссылка
		|ГДЕ
		|	Товары1.Ссылка = &ТекущийДокумент
		|	И Товары1.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт,
		|	ХозрасчетныйОбороты.КоличествоОборотДт КАК КоличествоОборотДт,
		|	ХозрасчетныйОбороты.КоличествоОборотКт КАК КоличествоОборотКт,
		|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ХозрасчетныйОбороты.КорСчет КАК КорСчет
		|ПОМЕСТИТЬ ХозрасчетныйОбороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			,
		|			Регистратор,
		|			Счет В ИЕРАРХИИ (&СписокСчетов),
		|			&СубконтоНоменклатураСклад,
		|			Субконто2 = &Склад
		|				ИЛИ Субконто2 = &СкладИзШапки,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Товары.Номер, 0) КАК Номер,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт > 0
		|			ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РегулировкаИзлишекКолво,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|				И &Забалансовый
		|			ТОГДА 0
		|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
		|			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РегулировкаИзлишекСумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|				И &Забалансовый
		|			ТОГДА 0
		|		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт > 0
		|			ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РегулировкаНедостачаКолво,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|				И &Забалансовый
		|			ТОГДА 0
		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
		|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РегулировкаНедостачаСумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт <= 0
		|			ТОГДА """"
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеОС
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеОС).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПересортицаТоваров).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ОприходованиеТоваров).Номер
		|	КОНЕЦ КАК РегулировкаИзлишекНомерСчета,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт <= 0
		|			ТОГДА """"
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеОС
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеОС).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
		|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПересортицаТоваров).Номер
		|	КОНЕЦ КАК РегулировкаНедостачаНомерСчета,
		|	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОбороты.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ ВТОбороты
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
		|		ПО Товары.Номенклатура = ХозрасчетныйОбороты.Субконто1
		|ГДЕ
		|	НЕ(ХозрасчетныйОбороты.Счет.Код = ""МЦ.06""
		|				И ХозрасчетныйОбороты.КорСчет.Код = ""МЦ.04""
		|				И ХозрасчетныйОбороты.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|	И НЕ(ХозрасчетныйОбороты.Счет.Код = ""МЦ.04""
		|				И ХозрасчетныйОбороты.КорСчет.Код = ""МЦ.06""
		|				И ХозрасчетныйОбороты.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОбороты.Номер КАК Номер
		|ПОМЕСТИТЬ СтрокиСОборотами
		|ИЗ
		|	ВТОбороты КАК ВТОбороты
		|ГДЕ
		|	НЕ ВТОбороты.Номер = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Номер КАК Номер,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.ТоварНаименование КАК ТоварНаименование,
		|	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
		|	Товары.ФактКоличество КАК ФактКоличество,
		|	Товары.БухКоличество КАК БухКоличество,
		|	Товары.Цена КАК Цена,
		|	Товары.ФактСумма КАК ФактСумма,
		|	Товары.БухСумма КАК БухСумма,
		|	Товары.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
		|	Товары.ТоварКод КАК ТоварКод,
		|	Товары.игсАртикулПоставщика КАК АртикулПоставщика
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиСОборотами КАК СтрокиСОборотами
		|		ПО Товары.Номер = СтрокиСОборотами.Номер
		|ГДЕ
		|	Товары.ФактКоличество - Товары.БухКоличество <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОбороты.Номер КАК Номер,
		|	ВТОбороты.РегулировкаИзлишекКолво КАК РегулировкаИзлишекКолво,
		|	ВТОбороты.РегулировкаИзлишекСумма КАК РегулировкаИзлишекСумма,
		|	ВТОбороты.РегулировкаНедостачаКолво КАК РегулировкаНедостачаКолво,
		|	ВТОбороты.РегулировкаНедостачаСумма КАК РегулировкаНедостачаСумма,
		|	ВТОбороты.РегулировкаИзлишекНомерСчета КАК РегулировкаИзлишекНомерСчета,
		|	ВТОбороты.РегулировкаНедостачаНомерСчета КАК РегулировкаНедостачаНомерСчета,
		|	ВТОбороты.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВТОбороты КАК ВТОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтрокиСОборотами";
	
	Если ВремяИнвентаризации Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачалоПериода", "НачалоПериода(&НачалоПериода,ДЕНЬ)");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&НачалоПериода", "КОНЕЦПЕРИОДА(&НачалоПериода,ДЕНЬ)"); 
	КонецЕсли;
	
	СписокСчетов = Новый Массив();
	СубконтоНоменклатураСклад = Новый Массив();  	
	ПервыйТовар = ЦелевойОбъект.Товары.Выгрузить()[0];
	
	Если ПервыйТовар.СчетУчета.Забалансовый
		И ПервыйТовар.СчетУчета.Код = "МЦ.04.А" Тогда
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве);
		
		СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
		СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
		Запрос.УстановитьПараметр("Склад", 			Шапка.Склад);
		Запрос.УстановитьПараметр("Забалансовый",	Истина);
		
		Запрос.УстановитьПараметр("СкладИзШапки", Неопределено);
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто3 = &Склад ИЛИ Субконто3 = &СкладИзШапки", "ЛОЖЬ");
		
	ИначеЕсли ПервыйТовар.СчетУчета.Забалансовый Тогда
		
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве);
		ОтборСклад = Новый Структура("СтруктурнаяЕдиница", Шапка.Склад);
		Работник = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(ЦелевойОбъект.Дата, ОтборСклад).ФизическоеЛицо;
		Запрос.УстановитьПараметр("Склад", 			Работник);
		Запрос.УстановитьПараметр("Забалансовый",	Истина);
		Запрос.УстановитьПараметр("СкладИзШапки",	ЦелевойОбъект.Склад);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СубконтоНоменклатураСклад", "");
		
	Иначе
		
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве);
		
		СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
		СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
		Запрос.УстановитьПараметр("Склад", 			Шапка.Склад);
		Запрос.УстановитьПараметр("Забалансовый",	Истина);
		Запрос.УстановитьПараметр("СкладИзШапки", Неопределено);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто3 = &Склад ИЛИ Субконто3 = &СкладИзШапки", "ЛОЖЬ");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Шапка.ДатаНачалаИнвентаризации1) Тогда
		КонецПериодаПараметр = Шапка.ДатаНачалаИнвентаризации1;
	Иначе
		КонецПериодаПараметр = Шапка.ДатаДокумента;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокСчетов", 				СписокСчетов);
	Запрос.УстановитьПараметр("СубконтоНоменклатураСклад", 	СубконтоНоменклатураСклад);
	Запрос.УстановитьПараметр("ТолькоОбороты",				ТолькоОбороты);
	Запрос.УстановитьПараметр("НачалоПериода", 				КонецДня(Шапка.ДатаДокумента) + 1);	
	Запрос.УстановитьПараметр("КонецПериода", 				Новый Граница(КонецДня(КонецПериодаПараметр), ВидГраницы.Включая)); 
	Запрос.УстановитьПараметр("КонецПериодаДата", 			КонецДня(КонецПериодаПараметр));
	
	Пакет = Запрос.ВыполнитьПакет();  
	
	Макет       				= ПолучитьМакет("ИНВ19");
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаСтрокаМОЛ 		= Макет.ПолучитьОбласть("ШапкаСтрокаМОЛ");
	ОбластьШапкаПодвал 			= Макет.ПолучитьОбласть("ШапкаПодвал");
	ОбластьСтрокаТаблицы 		= Макет.ПолучитьОбласть("СтрокаТаблицы1");
	ОбластьИтоговПоСтранице    	= Макет.ПолучитьОбласть("ИтогоТаблицы1");
	ОбластьПодвала             	= Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалСтрокаМОЛ 		= Макет.ПолучитьОбласть("ПодвалСтрокаМОЛ");
	
	ОбластьШапка.Параметры.Заполнить(Шапка);
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация,Шапка.ДатаДокумента);
	ОбластьШапка.Параметры.ПредставлениеОрганизации 		= ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
	"НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	ОбластьШапка.Параметры.ОрганизацияПоОКПО        		= СведенияОбОрганизации.КодПоОКПО;
	ОбластьШапка.Параметры.ДатаДокумента            		= Шапка.ДатаДокумента;
	ОбластьШапкаПодвал.Параметры.ДатаНачалаИнвентаризации 	= Шапка.ДатаНачалаИнвентаризации;
	ОбластьШапка.Параметры.НомерДокумента           		= ЦелевойОбъект.Номер;
	ОбластьШапка.Параметры.ПредставлениеПодразделения 		= Шапка.Склад;
	
	Если ЗначениеЗаполнено(Шапка.Склад) Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК игсФизическоеЛицо,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо2 КАК игсФизическоеЛицо2,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо3 КАК игсФизическоеЛицо3,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо4 КАК игсФизическоеЛицо4,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо5 КАК игсФизическоеЛицо5,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо6 КАК игсФизическоеЛицо6,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо7 КАК игсФизическоеЛицо7,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо8 КАК игсФизическоеЛицо8,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо9 КАК игсФизическоеЛицо9,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо10 КАК игсФизическоеЛицо10,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо11 КАК игсФизическоеЛицо11,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо12 КАК игсФизическоеЛицо12,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо13 КАК игсФизическоеЛицо13,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо14 КАК игсФизическоеЛицо14,
		|	ОтветственныеЛицаСрезПоследних.игсФизическоеЛицо15 КАК игсФизическоеЛицо15
		|ИЗ
		|	РегистрСведений.ОтветственныеЛица.СрезПоследних(, СтруктурнаяЕдиница = &Склад) КАК ОтветственныеЛицаСрезПоследних";   
		
		Запрос.УстановитьПараметр("Склад", Шапка.Склад); 
		РезультатМОЛ = Запрос.Выполнить();
		
		Если Не РезультатМОЛ.Пустой() Тогда
			
			МассивМОЛ = Новый Массив();
			
		КонецЕсли; 
		
		Выборка = РезультатМОЛ.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Для Сч = 1 По 15 Цикл
				
				ФизЛицо = Выборка["игсФизическоеЛицо" + ?(Сч = 1, "", Сч)]; 
				
				Если ЗначениеЗаполнено(ФизЛицо) Тогда
					МассивМОЛ.Добавить(ФизЛицо);
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЦикла; 
		
	КонецЕсли;
	
	ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(Шапка.Организация, МассивМОЛ, Шапка.ДатаДокумента);
	
	ОтборБухгалтер = Новый Структура();
	ОтборБухгалтер.Вставить("СтруктурнаяЕдиница", Шапка.Организация);
	ОтборБухгалтер.Вставить("ОтветственноеЛицо", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер); 
	ЗапросБухгалтер = РегистрыСведений.ОтветственныеЛицаОрганизаций.ПолучитьПоследнее(Шапка.ДатаДокумента,ОтборБухгалтер); 
	
	Если ЗапросБухгалтер <> Неопределено Тогда
		Бухгалтер = ЗапросБухгалтер.ФизическоеЛицо;
	КонецЕсли;
	
	Если НЕ ТолькоОбороты Тогда   
		
		ТабДокумент.Вывести(ОбластьШапка); 
		
		Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл  
			
			ОбластьШапкаСтрокаМОЛ.Параметры.ДолжностьМОЛ 	= СтрокаМОЛ.Должность; 
			ОбластьШапкаСтрокаМОЛ.Параметры.ФИОМОЛ 			= СтрокаМОЛ.Представление;  
			ТабДокумент.Вывести(ОбластьШапкаСтрокаМОЛ);
			
		КонецЦикла;
		
		Если ДанныеМОЛ.Количество() = 1 Тогда
			
			ОбластьШапкаСтрокаМОЛ.Параметры.ДолжностьМОЛ 	= ""; 
			ОбластьШапкаСтрокаМОЛ.Параметры.ФИОМОЛ 			= ""; 
			ТабДокумент.Вывести(ОбластьШапкаСтрокаМОЛ); 
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьШапкаПодвал);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц(); 
		
	КонецЕсли;
	
	ИтогоРезультатИзлишекКолво   		= 0;
	ИтогоРезультатИзлишекСумма   		= 0;
	ИтогоРезультатНедостачаКолво 		= 0;
	ИтогоРезультатНедостачаСумма 		= 0;
	ИтогоРегулировкаИзлишекКолво 		= 0;
	ИтогоРегулировкаИзлишекСумма 		= 0;
	ИтогоРегулировкаНедостачаКолво 		= 0;
	ИтогоРегулировкаНедостачаСумма 		= 0;
	ИтогоСписаниеНедостачКолонка1Колво 	= 0;
	ИтогоСписаниеНедостачКолонка1Сумма 	= 0;
	ИтогоСписаниеНедостачКолонка2Колво 	= 0;
	ИтогоСписаниеНедостачКолонка2Сумма 	= 0;
	ИтогоФактКоличество 				= 0;
	ИтогоФактСумма 						= 0;
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
	ЗаголовокТаблицы.Параметры.ДопКолонка = ТоварКод;
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	ВыборкаСтрокТовары = Пакет[4].Выбрать();
	
	Если НЕ ВыборкаСтрокТовары.Количество() = 0 Тогда
		
		ТаблицаДокументов  = Пакет[5].Выгрузить();
		ТаблицаДокументов.Индексы.Добавить("Номер");
		ТаблицаДокументов.Индексы.Добавить("Номенклатура");
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();  
		
		Ном = 0;
		МассивНоменклатуры = Новый Массив();
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Ном = Ном + 1;
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				ОбщегоНазначения.СообщитьПользователю("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.");
				Продолжить;
			КонецЕсли;	
			Если МассивНоменклатуры.Найти(ВыборкаСтрокТовары.Номенклатура) <> Неопределено Тогда
				Продолжить;
			КонецЕсли; 		
			МассивНоменклатуры.Добавить(ВыборкаСтрокТовары.Номенклатура);		
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);		
			Если ВыборкаСтрокТовары.Номер = 0 Тогда
				ОбластьСтрокаТаблицы.Параметры.Номер = "";
			КонецЕсли; 
			
			ОбластьСтрокаТаблицы.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование ;
			
			Разница     = 0;
			РазницаСумм = 0;
			
			Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
			РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;
			
			Если Разница < 0 И РазницаСумм < 0 Тогда
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = - Разница;
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма = - РазницаСумм;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = 0;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = 0;
				
				ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
				ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + (- РазницаСумм);
			ИначеЕсли Разница < 0 И РазницаСумм >= 0 Тогда
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = - Разница;
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма = РазницаСумм;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = 0;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = 0;
				
				ИтогоРезультатНедостачаКолво = ИтогоРезультатНедостачаКолво + (- Разница);
				ИтогоРезультатНедостачаСумма = ИтогоРезультатНедостачаСумма + РазницаСумм;
			Иначе
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = 0;
				ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма = 0;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво   = Разница;
				ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма   = РазницаСумм;
				
				ИтогоРезультатИзлишекКолво   = ИтогоРезультатИзлишекКолво   + Разница;
				ИтогоРезультатИзлишекСумма   = ИтогоРезультатИзлишекСумма   + РазницаСумм;
			КонецЕсли;
			РегулировкаИзлишекНомерСчета 	= "";
			РегулировкаНедостачаНомерСчета 	= "";
			РегулировкаИзлишекКолво 		= 0;
			РегулировкаИзлишекСумма 		= 0;
			РегулировкаНедостачаКолво 		= 0;
			РегулировкаНедостачаСумма 		= 0;
			
			ДвиженияПоДокументам = 	ТаблицаДокументов.НайтиСтроки(Новый Структура("Номенклатура", ВыборкаСтрокТовары.Номенклатура));
			
			Для каждого СтрокаДвижение Из ДвиженияПоДокументам Цикл
				
				Если СтрокаДвижение.РегулировкаИзлишекКолво <> 0 
					И СтрокаДвижение.РегулировкаНедостачаКолво <> 0 Тогда
					
					Если СтрокаДвижение.РегулировкаИзлишекКолво > СтрокаДвижение.РегулировкаНедостачаКолво Тогда
						
						СтрокаДвижение.РегулировкаИзлишекКолво 		= СтрокаДвижение.РегулировкаИзлишекКолво - СтрокаДвижение.РегулировкаНедостачаКолво;
						СтрокаДвижение.РегулировкаНедостачаКолво 	= 0;
						
					ИначеЕсли СтрокаДвижение.РегулировкаИзлишекКолво < СтрокаДвижение.РегулировкаНедостачаКолво Тогда
						
						СтрокаДвижение.РегулировкаНедостачаКолво 	= СтрокаДвижение.РегулировкаНедостачаКолво - СтрокаДвижение.РегулировкаИзлишекКолво;
						СтрокаДвижение.РегулировкаИзлишекКолво 		= 0;
						
					Иначе
						
						СтрокаДвижение.РегулировкаИзлишекКолво 		= 0;
						СтрокаДвижение.РегулировкаНедостачаКолво 	= 0;
						
						Продолжить;
						
					КонецЕсли; 	
					
				КонецЕсли; 
				
				Если СтрокаДвижение.РегулировкаИзлишекКолво > 0 Тогда
					
					Если ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво > РегулировкаИзлишекКолво Тогда
						
						Разница = ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво - РегулировкаИзлишекКолво;
						
						РегулировкаИзлишекКолво = РегулировкаИзлишекКолво + ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекКолво, Разница);
						РегулировкаИзлишекСумма = РегулировкаИзлишекСумма + ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
						
						Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекНомерСчета) Тогда
							РегулировкаИзлишекНомерСчета = РегулировкаИзлишекНомерСчета + ?(РегулировкаИзлишекНомерСчета = "", "", ",") + СтрокаДвижение.РегулировкаИзлишекНомерСчета;
						КонецЕсли;
						
						Если ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво = РегулировкаИзлишекКолво 
							И ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма <> 0 Тогда
							РегулировкаИзлишекСумма = ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма;
						КонецЕсли; 
						
					КонецЕсли;
					
				ИначеЕсли СтрокаДвижение.РегулировкаНедостачаКолво > 0 Тогда 
					
					Если ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво > РегулировкаНедостачаКолво Тогда
						
						Разница = ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво - РегулировкаНедостачаКолво;
						
						РегулировкаНедостачаКолво = РегулировкаНедостачаКолво + ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаКолво, Разница);
						РегулировкаНедостачаСумма = РегулировкаНедостачаСумма + ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница);
						
						Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаНомерСчета) Тогда
							РегулировкаНедостачаНомерСчета = РегулировкаНедостачаНомерСчета + ?(РегулировкаНедостачаНомерСчета = "", "", ",") + СтрокаДвижение.РегулировкаНедостачаНомерСчета;
						КонецЕсли;
						
						Если ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво = РегулировкаНедостачаКолво 
							И ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма <> 0 Тогда
							РегулировкаНедостачаСумма = ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла; 
			
			ИтогоРегулировкаИзлишекКолво		= ИтогоРегулировкаИзлишекКолво 	 + РегулировкаИзлишекКолво;
			ИтогоРегулировкаИзлишекСумма 		= ИтогоРегулировкаИзлишекСумма 	 + РегулировкаИзлишекСумма;
			ИтогоРегулировкаНедостачаКолво 		= ИтогоРегулировкаНедостачаКолво + РегулировкаНедостачаКолво;
			ИтогоРегулировкаНедостачаСумма 		= ИтогоРегулировкаНедостачаСумма + РегулировкаНедостачаСумма;
			СписаниеНедостачКолонка1Колво 		= 0;
			СписаниеНедостачКолонка2Колво 		= 0;
			СписаниеНедостачКолонка1Сумма 		= 0;
			СписаниеНедостачКолонка2Сумма 		= 0;
			
			СписаниеНедостачКолонка1Колво 		= ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекКолво - РегулировкаИзлишекКолво;
			Если СписаниеНедостачКолонка1Колво < 0 Тогда
				СписаниеНедостачКолонка2Колво 	= -СписаниеНедостачКолонка1Колво;
				СписаниеНедостачКолонка1Колво 	= 0;
			КонецЕсли; 
			СписаниеНедостачКолонка1Сумма 		= ОбластьСтрокаТаблицы.Параметры.РезультатИзлишекСумма - РегулировкаИзлишекСумма;
			Если СписаниеНедостачКолонка1Сумма < 0 Тогда
				СписаниеНедостачКолонка2Сумма 	= -СписаниеНедостачКолонка1Сумма;
				СписаниеНедостачКолонка1Сумма 	= 0;
			КонецЕсли; 
			
			СписаниеНедостачКолонка2Колво 		= СписаниеНедостачКолонка2Колво + ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаКолво - РегулировкаНедостачаКолво;
			Если СписаниеНедостачКолонка2Колво < 0 Тогда
				СписаниеНедостачКолонка1Колво 	= СписаниеНедостачКолонка1Колво - СписаниеНедостачКолонка2Колво;
				СписаниеНедостачКолонка2Колво 	= 0;
			КонецЕсли; 
			СписаниеНедостачКолонка2Сумма 		= СписаниеНедостачКолонка2Сумма + ОбластьСтрокаТаблицы.Параметры.РезультатНедостачаСумма - РегулировкаНедостачаСумма;
			Если СписаниеНедостачКолонка2Сумма < 0 Тогда
				СписаниеНедостачКолонка1Сумма 	= СписаниеНедостачКолонка1Сумма - СписаниеНедостачКолонка2Сумма;
				СписаниеНедостачКолонка2Сумма 	= 0;		
			КонецЕсли; 
			Если СписаниеНедостачКолонка1Колво 	= 0 Тогда
				СписаниеНедостачКолонка1Сумма 	= 0;	
			КонецЕсли; 
			Если СписаниеНедостачКолонка2Колво	= 0 Тогда
				СписаниеНедостачКолонка2Сумма 	= 0;
			КонецЕсли; 
			
			ИтогоСписаниеНедостачКолонка1Колво	= ИтогоСписаниеНедостачКолонка1Колво 	+ СписаниеНедостачКолонка1Колво;
			ИтогоСписаниеНедостачКолонка1Сумма 	= ИтогоСписаниеНедостачКолонка1Сумма 	+ СписаниеНедостачКолонка1Сумма;
			ИтогоСписаниеНедостачКолонка2Колво 	= ИтогоСписаниеНедостачКолонка2Колво 	+ СписаниеНедостачКолонка2Колво;
			ИтогоСписаниеНедостачКолонка2Сумма 	= ИтогоСписаниеНедостачКолонка2Сумма 	+ СписаниеНедостачКолонка2Сумма;
			ИтогоФактКоличество 				= ИтогоФактКоличество 					+ ВыборкаСтрокТовары.ФактКоличество;
			ИтогоФактСумма 						= ИтогоФактСумма 						+ ВыборкаСтрокТовары.ФактСумма;
			
			ОбластьСтрокаТаблицы.Параметры.РегулировкаИзлишекКолво 			= РегулировкаИзлишекКолво;
			ОбластьСтрокаТаблицы.Параметры.РегулировкаИзлишекСумма 			= РегулировкаИзлишекСумма;
			ОбластьСтрокаТаблицы.Параметры.РегулировкаНедостачаКолво 		= РегулировкаНедостачаКолво;
			ОбластьСтрокаТаблицы.Параметры.РегулировкаНедостачаСумма 		= РегулировкаНедостачаСумма;
			ОбластьСтрокаТаблицы.Параметры.РегулировкаИзлишекНомерСчета 	= РегулировкаИзлишекНомерСчета;
			ОбластьСтрокаТаблицы.Параметры.РегулировкаНедостачаНомерСчета 	= РегулировкаНедостачаНомерСчета;
			
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Колво 	= СписаниеНедостачКолонка1Колво;
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка1Сумма 	= СписаниеНедостачКолонка1Сумма;
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка2Колво 	= СписаниеНедостачКолонка2Колво;
			ОбластьСтрокаТаблицы.Параметры.СписаниеНедостачКолонка2Сумма 	= СписаниеНедостачКолонка2Сумма;
			
			ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекКолво   			= ИтогоРезультатИзлишекКолво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатИзлишекСумма   			= ИтогоРезультатИзлишекСумма;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаКолво 			= ИтогоРезультатНедостачаКолво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРезультатНедостачаСумма 			= ИтогоРезультатНедостачаСумма;
		
		ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаИзлишекКолво   		= ИтогоРегулировкаИзлишекКолво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаИзлишекСумма   		= ИтогоРегулировкаИзлишекСумма;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаНедостачаКолво 		= ИтогоРегулировкаНедостачаКолво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоРегулировкаНедостачаСумма 		= ИтогоРегулировкаНедостачаСумма;
		
		ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка1Колво   	= ИтогоСписаниеНедостачКолонка1Колво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка1Сумма   	= ИтогоСписаниеНедостачКолонка1Сумма;
		ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка2Колво 	= ИтогоСписаниеНедостачКолонка2Колво;
		ОбластьИтоговПоСтранице.Параметры.ИтогоСписаниеНедостачКолонка2Сумма 	= ИтогоСписаниеНедостачКолонка2Сумма;
		
		ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество 					= ИтогоФактКоличество;
		ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма 						= ИтогоФактСумма;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
	
	ОбластьПодвала.Параметры.ФИОБухгалтера = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Бухгалтер);
	
	ОбластьПодвала.Параметры.Заполнить(Шапка);
	
	Если НЕ ТолькоОбороты Тогда
		
		СтрокаПодвалаЗаполнена = Ложь;
		
		Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
			
			Если НЕ СтрокаПодвалаЗаполнена Тогда 
				
				ОбластьПодвала.Параметры.ДолжностьМОЛ 	= СтрокаМОЛ.Должность;
				ОбластьПодвала.Параметры.ФИОМОЛ 		= СтрокаМОЛ.Представление;
				ТабДокумент.Вывести(ОбластьПодвала); 
				СтрокаПодвалаЗаполнена 					= Истина;
				
			КонецЕсли;
			
			Если ДанныеМОЛ.Количество() > 1 И СтрокаПодвалаЗаполнена Тогда 
				
				ОбластьПодвалСтрокаМОЛ.Параметры.ДолжностьМОЛ 	= СтрокаМОЛ.Должность;
				ОбластьПодвалСтрокаМОЛ.Параметры.ФИОМОЛ 		= СтрокаМОЛ.Представление;
				ТабДокумент.Вывести(ОбластьПодвалСтрокаМОЛ);  
				
			Иначе
				
				ТабДокумент.Вывести(ОбластьПодвалСтрокаМОЛ);
				
			КонецЕсли;
			
		КонецЦикла;    
		
	КонецЕсли; 
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры    


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
