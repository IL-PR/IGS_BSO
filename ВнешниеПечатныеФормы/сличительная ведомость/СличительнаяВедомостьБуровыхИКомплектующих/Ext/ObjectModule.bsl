
Перем мВалютаРегламентированногоУчета;
Перем мВалютаУпрУчета;

Функция СведенияОВнешнейОбработке() Экспорт     
	
	ПараметрыРегистрации 				= ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.3.0");
	ПараметрыРегистрации.Информация 	= НСтр("ru = 'Сличительная ведомость буровых и комплектующих'");
	ПараметрыРегистрации.Вид 			= ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия 		= "1.2";
	ПараметрыРегистрации.Назначение.Добавить("Документ.ИнвентаризацияОС");
	
	Команда 							= ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление 				= НСтр("ru = 'Сличительная ведомость буровых и комплектующих'");
	Команда.Идентификатор 				= "СличительнаяВедомостьБуровыхИКомплектующих";
	Команда.Использование 				= ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	Команда.ПоказыватьОповещение 		= Ложь;
	Команда.Модификатор 				= "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт    
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "СличительнаяВедомостьБуровыхИКомплектующих");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент 	= ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ПараметрыВывода);
		ПечатнаяФорма.СинонимМакета 		= НСтр("ru = 'Макет'");  
		ПечатнаяФорма.ПолныйПутьКМакету 	= "Объект.Макет";	
		
	КонецЕсли;
	
КонецПроцедуры      

Функция ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)  
	
	ТабДокумент = Новый ТабличныйДокумент; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
		|	ИнвентаризацияОС.Дата КАК Дата,
		|	ИнвентаризацияОС.Номер КАК НомерДокумента,
		|	ИнвентаризацияОС.Организация КАК Организация,
		|	ИнвентаризацияОС.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
		|	ИнвентаризацияОС.ПодразделениеОрганизации.Код КАК ПодразделениеКод,
		|	ИнвентаризацияОС.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
		|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
		|	ИнвентаризацияОС.ДокументОснованиеВид КАК ДокументОснованиеВид,
		|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
		|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
		|	ИнвентаризацияОС.ОтветственноеЛицо КАК Мол,
		|	ИнвентаризацияОС.игсСклад КАК Склад,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ИнвентаризацияОС.игсСклад) КАК игсСкладПредставление
		|ИЗ
		|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		|ГДЕ
		|	ИнвентаризацияОС.Ссылка В (&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Док = РезультатЗапроса.Выбрать(); 
	
	Пока Док.Следующий() Цикл
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
		Запрос.УстановитьПараметр("КонецПериодаДата", Док.ДатаОкончанияИнвентаризации);
		Запрос.УстановитьПараметр("НачалоПериода", Док.ДатаНачалаИнвентаризации); 
		Запрос.УстановитьПараметр("Организация", Док.Организация);
		Запрос.УстановитьПараметр("СубконтоОсновноеСредство", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		
		СписокСчетов = Новый Массив;
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.АрендованныеОсновныеСредства);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
		СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.игсБуровыеИКомплектующие); 
		
		Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);  
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИнвентаризацияОСОС.НомерСтроки КАК НомерСтроки,
			|	ИнвентаризацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
			|	ВЫБОР
			|		КОГДА ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
			|			ТОГДА ИнвентаризацияОСОС.ОсновноеСредство.Наименование
			|		ИНАЧЕ ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное
			|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
			|	ИнвентаризацияОСОС.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
			|	ИнвентаризацияОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
			|	ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер, ИнвентаризацияОСОС.ОсновноеСредство.Код) КАК ИнвентарныйНомер,
			|	ИнвентаризацияОСОС.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
			|	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
			|	ИнвентаризацияОСОС.СтоимостьФактическая КАК СтоимостьФактическая,
			|	ИнвентаризацияОСОС.КоличествоПоДаннымУчета КАК НаличиеПоДаннымУчета,
			|	ИнвентаризацияОСОС.КоличествоФактическое КАК НаличиеФактическое
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
			|				,
			|				Организация = &Организация
			|					И ОсновноеСредство В
			|						(ВЫБРАТЬ
			|							ИнвентаризацияОСОС.ОсновноеСредство
			|						ИЗ
			|							Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
			|						ГДЕ
			|							ИнвентаризацияОСОС.Ссылка В (&Ссылка))) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
			|		ПО ИнвентаризацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			|ГДЕ
			|	ИнвентаризацияОСОС.Ссылка В (&Ссылка)
			|	И ИнвентаризацияОСОС.КоличествоПоДаннымУчета <> ИнвентаризацияОСОС.КоличествоФактическое
			|	ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	Товары.ОсновноеСредство КАК ОсновноеСредство,
			|	Товары.ОсновноеСредствоНаименованиеПолное КАК ОсновноеСредствоНаименованиеПолное,
			|	Товары.ДатаВыпуска КАК ДатаВыпуска,
			|	Товары.ЗаводскойНомер КАК ЗаводскойНомер,
			|	Товары.ИнвентарныйНомер КАК ИнвентарныйНомер,
			|	Товары.НомерПаспорта КАК НомерПаспорта,
			|	Товары.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
			|	Товары.СтоимостьФактическая КАК СтоимостьФактическая,
			|	Товары.НаличиеПоДаннымУчета КАК НаличиеПоДаннымУчета,
			|	Товары.НаличиеФактическое КАК НаличиеФактическое
			|ИЗ
			|	Товары КАК Товары
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Товары.НомерСтроки КАК НомерСтроки,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК РегулировкаИзлишекКолво,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
			|			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК РегулировкаИзлишекСумма,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК РегулировкаНедостачаКолво,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
			|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК РегулировкаНедостачаСумма,
			|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
			|	ХозрасчетныйОбороты.Субконто1 КАК ОсновноеСредство
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Обороты(
			|			&НачалоПериода,
			|			,
			|			Регистратор,
			|			Счет В ИЕРАРХИИ (&СписокСчетов),
			|			&СубконтоОсновноеСредство,
			|			Субконто1 В
			|				(ВЫБРАТЬ
			|					Товары.ОсновноеСредство
			|				ИЗ
			|					Товары КАК Товары),
			|			,
			|			) КАК ХозрасчетныйОбороты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
			|		ПО ХозрасчетныйОбороты.Субконто1 = Товары.ОсновноеСредство
			|ГДЕ
			|	ХозрасчетныйОбороты.Период МЕЖДУ &НачалоПериода И &КонецПериодаДата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ  Товары";
		
		Пакет 				= Запрос.ВыполнитьПакет();
		ТаблицаОС 			= Пакет[1].Выгрузить();
		ТаблицаДокументов	= Пакет[2].Выгрузить();
		
		Макет = ПолучитьМакет("Макет");
		
		// Получаем области макета для вывода в табличный документ
		ОбластьШапка              = Макет.ПолучитьОбласть("Шапка");
		СтрокаТаблицы             = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ПодвалТаблицы             = Макет.ПолучитьОбласть("ПодвалТаблицы"); 
		
		ТабДокумент.ПолеСверху              = 10;
		ТабДокумент.ПолеСлева               = 0;
		ТабДокумент.ПолеСнизу               = 0;
		ТабДокумент.ПолеСправа              = 0;
		ТабДокумент.РазмерКолонтитулаСверху = 10;
		ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
		
		ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ18";
		
		// Выведем шапку документа
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
		
		ОбластьШапка.Параметры.Заполнить(Док);
		ОбластьШапка.Параметры.Склад = Док.игсСкладПредставление;
		
		ТабДокумент.Вывести(ОбластьШапка);       
		
		Мол = Док.Мол;
		
		Если Мол <> Справочники.ФизическиеЛица.ПустаяСсылка() Тогда 
			
			МолДолжность 						= УчетЗарплаты.ДолжностьФизическогоЛица(Мол, Док.Организация, ТекущаяДатаСеанса());
			ФиоМол 								= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Мол,"ФИО",,); 
			
			ПодвалТаблицы.Параметры.Должность 	= МолДолжность;
			ПодвалТаблицы.Параметры.ФИО       	= ФиоМол;
			
		КонецЕсли;
		
		ИтогИзлишекКоличество   				= 0;
		ИтогИзлишекСтоимость    				= 0;
		ИтогНедостачаКоличество 				= 0;
		ИтогНедостачаСтоимость  				= 0;
		
		ИтогоРегулировкаИзлишекКолво 			= 0;
		ИтогоРегулировкаИзлишекСумма 			= 0;
		ИтогоРегулировкаНедостачаКолво 			= 0;
		ИтогоРегулировкаНедостачаСумма 			= 0;
		ИтогоРегулировкаИзлишекКолво1 			= 0;
		ИтогоРегулировкаИзлишекСумма1 			= 0;
		ИтогоРегулировкаНедостачаКолво1 		= 0;
		ИтогоРегулировкаНедостачаСумма1 		= 0;
		
		Для Каждого СтрокаОС Из ТаблицаОС Цикл
			
			СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалТаблицы);
			
			РазницаПоНаличию   		= СтрокаОС.НаличиеФактическое 	- СтрокаОС.НаличиеПоДаннымУчета;
			РазницаПоСтоимости 		= СтрокаОС.СтоимостьФактическая - СтрокаОС.СтоимостьПоДаннымУчета;
			
			ИзлишекКоличество   	= ?(РазницаПоНаличию > 0, 	 РазницаПоНаличию, 0);
			ИзлишекСтоимость    	= ?(РазницаПоСтоимости > 0,  РазницаПоСтоимости, 0);
			НедостачаКоличество 	= ?(РазницаПоНаличию < 0, 	-РазницаПоНаличию, 0);
			НедостачаСтоимость  	= ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);
			
			ИтогИзлишекКоличество   = ИтогИзлишекКоличество 	+ ИзлишекКоличество;
			ИтогИзлишекСтоимость    = ИтогИзлишекСтоимость 		+ ИзлишекСтоимость;
			ИтогНедостачаКоличество = ИтогНедостачаКоличество 	+ НедостачаКоличество;
			ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость 	+ НедостачаСтоимость;
			
			СтрокаТаблицы.Параметры.ИзлишекКоличество   = ИзлишекКоличество;
			СтрокаТаблицы.Параметры.НедостачаКоличество = НедостачаКоличество;  
			
			РегулировкаИзлишекНомерСчета 	= "";
			РегулировкаНедостачаНомерСчета 	= "";
			РегулировкаИзлишекКолво 		= 0;
			РегулировкаИзлишекСумма 		= 0;
			РегулировкаНедостачаКолво 		= 0;
			РегулировкаНедостачаСумма 		= 0;
			
			ДвиженияПоДокументам = ТаблицаДокументов.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаОС.НомерСтроки));
			
			Для Каждого СтрокаДвижение Из ДвиженияПоДокументам Цикл 
				
				РегулировкаИзлишекСумма = РегулировкаИзлишекСумма + СтрокаДвижение.РегулировкаИзлишекСумма;
				
				Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекСумма)
					ИЛИ ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекКолво) Тогда 
					
					РегулировкаИзлишекНомерСчета = РегулировкаИзлишекНомерСчета + ?(РегулировкаИзлишекНомерСчета = "", "", ",")
					+ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДвижение.Регистратор, "Номер");
					РегулировкаИзлишекКолво = РегулировкаИзлишекКолво + 1;   
					
				КонецЕсли; 
				
				РегулировкаНедостачаСумма = РегулировкаНедостачаСумма + СтрокаДвижение.РегулировкаНедостачаСумма;  
				
				Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаСумма)
					ИЛИ ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаКолво) Тогда 
					
					РегулировкаНедостачаНомерСчета = РегулировкаНедостачаНомерСчета + ?(РегулировкаНедостачаНомерСчета = "", "", ",")
					+ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДвижение.Регистратор, "Номер");
					РегулировкаНедостачаКолво = РегулировкаНедостачаКолво + 1;  
					
				КонецЕсли;
				
			КонецЦикла; 
			
			ИтогоРегулировкаИзлишекКолво	= ИтогоРегулировкаИзлишекКолво 	 + РегулировкаИзлишекКолво;
			ИтогоРегулировкаИзлишекСумма 	= ИтогоРегулировкаИзлишекСумма 	 + РегулировкаИзлишекСумма;
			ИтогоРегулировкаНедостачаКолво 	= ИтогоРегулировкаНедостачаКолво + РегулировкаНедостачаКолво;
			ИтогоРегулировкаНедостачаСумма 	= ИтогоРегулировкаНедостачаСумма + РегулировкаНедостачаСумма;
			
			СтрокаТаблицы.Параметры.РегулировкаИзлишекКолво 	= РегулировкаИзлишекКолво;
			СтрокаТаблицы.Параметры.РегулировкаНедостачаКолво 	= РегулировкаНедостачаКолво;
			
			СтрокаТаблицы.Параметры.РегулировкаИзлишекКолво1 	= ИзлишекКоличество - РегулировкаИзлишекКолво;
			
			Если НедостачаКоличество - РегулировкаНедостачаКолво > 0 Тогда 
				
				СтрокаТаблицы.Параметры.РегулировкаНедостачаКолво1 	= НедостачаКоличество - РегулировкаНедостачаКолво;
				СтрокаТаблицы.Параметры.РегулировкаНедостачаСумма1 	= НедостачаСтоимость - РегулировкаНедостачаСумма;
				
			КонецЕсли;
			
			// Окончательные результаты
			Если ИзлишекКоличество - РегулировкаИзлишекКолво = -(НедостачаКоличество - РегулировкаНедостачаКолво) Тогда
				
				СтрокаТаблицы.Параметры.РегулировкаИзлишекКолво1 	= 0;
				СтрокаТаблицы.Параметры.РегулировкаНедостачаКолво1 	= 0;
				
			Иначе
				
				ИтогоРегулировкаИзлишекКолво1 = ИтогоРегулировкаИзлишекКолво1 + ИзлишекКоличество - РегулировкаИзлишекКолво; 
				
				Если НедостачаКоличество - РегулировкаНедостачаКолво > 0 Тогда
					
					ИтогоРегулировкаНедостачаКолво1 = ИтогоРегулировкаНедостачаКолво1 + НедостачаКоличество - РегулировкаНедостачаКолво;
					
				КонецЕсли;
				
			КонецЕсли; 
			
			ТабДокумент.Вывести(СтрокаТаблицы);
			
		КонецЦикла; 
		
		ТабДокумент.Вывести(ПодвалТаблицы); 
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

