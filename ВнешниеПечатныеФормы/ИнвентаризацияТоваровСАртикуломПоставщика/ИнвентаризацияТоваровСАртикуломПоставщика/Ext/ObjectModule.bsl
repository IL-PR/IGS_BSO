Функция СведенияОВнешнейОбработке() Экспорт     
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ИнвентаризацияТоваровНаСкладе");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");  
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Инвентаризация товаров с артикулом поставщика"); 
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", ""); 
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Инвентаризация товаров с артикулом поставщика", "ИнвентаризацияТоваровСАртикуломПоставщика", "открытиеФормы", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции


Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды; 
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры

Функция Печать(МассивОбъектов, ПараметрыПечати, ОбъектыПечати, КоллекцияПечатныхФорм) экспорт
	Возврат ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати,Константы.ВалютаРегламентированногоУчета.Получить());	
КонецФункции

Функция ПолучитьВыборкуШапок(МассивОбъектов)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК Номер,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата,
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИнвентаризацияТоваровНаСкладе.Дата
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата
	|	КОНЕЦ КАК ДокументОснованиеДата,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер = """"
	|			ТОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, ИнвентаризацияТоваровНаСкладе.Номер)
	|		ИНАЧЕ ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер
	|	КОНЕЦ КАК ДокументОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
	|	ИнвентаризацияТоваровНаСкладе.Склад.Представление КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация1,
	|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
	|	ИнвентаризацияТоваровНаСкладе.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК ТоварКратко,
	|		ВЫБОР
	|			КОГДА &ИспользоватьАртикуль
	|				ТОГДА ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Код
	|			ИНАЧЕ ИнвентаризацияТоваровНаСкладе.Товары.Номенклатура.Артикул
	|		КОНЕЦ КАК КодАртикул,
	|		СчетУчета КАК СубСчет,
	|		Количество КАК Количество,
	|		КоличествоУчет КАК КоличествоПоУчету,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		СуммаУчет КАК СуммаПоУчету
	|	) КАК Товары,
	|	ИнвентаризацияТоваровНаСкладе.ИнвентаризационнаяКомиссия.(
	|		НомерСтроки КАК НомерСтроки,
	|		ФизЛицо КАК ФизЛицо,
	|		Председатель КАК Председатель
	|	) КАК ИнвентаризационнаяКомиссия,
	|	ИнвентаризацияТоваровНаСкладе.ПричинаПроведенияИнвентаризации КАК ПричинаПроведенияИнвентаризации
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ИнвентаризацияТоваровНаСкладе.Организация = ДанныеПервичныхДокументов.Организация
	|			И ИнвентаризацияТоваровНаСкладе.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Дата,
	|	Ссылка,
	|	Председатель УБЫВ,
	|	ИнвентаризацияТоваровНаСкладе.Товары.НомерСтроки";
	Запрос.УстановитьПараметр("ИспользоватьАртикуль",ЭтотОбъект.ИспользоватьАртикуль);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати, ВалютаРегламентированногоУчета)
	ВыводитьАртикул = ЭтотОбъект.ИспользоватьАртикуль;
	ВалютаПечати = ВалютаРегламентированногоУчета;
	Шапки = ПолучитьВыборкуШапок(МассивОбъектов);
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияТоваровНаСкладе_ИнвентаризацияТоваровНаСкладе";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияТоваровНаСкладе.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	ПервыйДокумент = Истина;
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	Пока Шапки.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапки, 
		"Инвентаризация товаров на складе");
		ТабДокумент.Вывести(ОбластьМакета);
		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапки);
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапки.Организация, Шапки.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.ВалютаНаименование = Строка(ВалютаПечати);
		ОбластьМакета.Параметры.Валюта             = ВалютаПечати;
		ТабДокумент.Вывести(ОбластьМакета);
		// Выводим шапку таблицы
		ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(Шапки);
		Если  ВыводитьАртикул = 0 Тогда
			ОбластьМакета.Параметры.Колонка = "Артикул";
		Иначе
			ОбластьМакета.Параметры.Колонка = "Код";
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);	
		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;	
		ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		ВыборкаСтрокТовары = Шапки.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар = ВыборкаСтрокТовары.Товар;	
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		// Вывести Итого
		ОбластьМакета                        = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего        = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммы);
		ОбластьМакета.Параметры.ВсегоПоУчету = ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСуммыПоУчету);
		ТабДокумент.Вывести(ОбластьМакета);
		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьМакета);
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Шапки.Ссылка);	
	КонецЦикла;	//Шапки.Следующий() 
	Возврат ТабДокумент;
КонецФункции