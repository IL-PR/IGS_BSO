 #Область ПрограммныйИнтерфейс
 
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Поиск Индексов параметров 
	ДатаПериодаИндекс = ПолучитьИндексПараметра(КомпоновщикНастроек.ПользовательскиеНастройки.Элементы, "ДатаПериода");
	ОрганизацияИндекс = ПолучитьИндексПараметра(КомпоновщикНастроек.ПользовательскиеНастройки.Элементы, "Организация");
	
	Если ДатаПериодаИндекс = -1 ИЛИ ОрганизацияИндекс = -1 Тогда
		Возврат;	
	КонецЕсли;
	
	// Чтение параметров пользователя
	ДатаПериода = КонецМесяца(КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[ДатаПериодаИндекс].Значение.Дата);
	Организация = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[ОрганизацияИндекс].Значение;
		
	// Получение таблицы будущих проводок за указанный период
	ТаблицаПроводок = игсРаспределениеАмортизацииОС.ПолучитьТаблицу(ДатаПериода, Организация);	
	
	// Вывод отчета с использованием внешнего набора данных
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[ДатаПериодаИндекс].Значение = ДатаПериода;
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[ОрганизацияИндекс].Значение = Организация;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("ТаблицаПроводок", ТаблицаПроводок);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Таблица = Неопределено;
	
КонецПроцедуры 

Функция СведенияОВнешнейОбработке() Экспорт

    ИмяОтчета = ЭтотОбъект.Метаданные().Имя;
    Синоним = ЭтотОбъект.Метаданные().Синоним;
    Синоним = ?(ЗначениеЗаполнено(Синоним), Синоним, ИмяОтчета);

    РегистрационныеДанные = Новый Структура;
    РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет");
    РегистрационныеДанные.Вставить("Наименование", Синоним);
    РегистрационныеДанные.Вставить("Версия", "1.0");
    РегистрационныеДанные.Вставить("БезопасныйРежим", Истина);
    РегистрационныеДанные.Вставить("Информация", "Отчет по распределению амортизации ОС.
	|
	|Автор: <ИГС> ПР Потылицын Г.С. #0111, 01.08.2025");

    ТаблицаКоманд = ПолучитьТаблицуКоманд();

    ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет", "ОткрытиеФормы", Истина);

    РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);

    Возврат РегистрационныеДанные;

КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуКоманд()

    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

    Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ОткрытиеФормы", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")

    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор; 
	
КонецПроцедуры

// Возвращает Индекс параметра
// * КоллекцияЭлементов - область поиска параметров;
// * ИмяПараметра - имя по которому будет осуществляться поиск
Функция ПолучитьИндексПараметра(КоллекцияЭлементов, ИмяПараметра)
	
	Индекс = 0;
	
	Для Каждого Элемент Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Если Строка(Элемент.Параметр) = ИмяПараметра Тогда
			Возврат Индекс;
		КонецЕсли;
		
	Индекс = Индекс + 1;
	КонецЦикла;

    Возврат -1;
	
КонецФункции

#КонецОбласти
