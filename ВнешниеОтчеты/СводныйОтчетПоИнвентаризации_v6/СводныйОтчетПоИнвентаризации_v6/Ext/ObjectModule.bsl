
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    НастройкиКомпановки = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы;
	Организация = НастройкиКомпановки[0].Значение;
	Период = НастройкиКомпановки[1].Значение;
	ТипОтчета = НастройкиКомпановки[2].Значение;
	// Формирование таблицы данных
	Таблица = СформироватьТаблицу();
	Если ТипОтчета = 0 Тогда
	
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[5].Использование = Ложь;

		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[8].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[9].Использование = Ложь;
		
	ИначеЕсли ТипОтчета = 1 Тогда
		
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[1].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Ложь;
		
        ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[5].Использование = Ложь;

		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[6].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[7].Использование = Истина;
		
	ИначеЕсли ТипОтчета = 2 Тогда
		
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[0].Структура[0].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[5].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[8].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[9].Использование = Истина;
	
 
	ИначеЕсли ТипОтчета = 3 Тогда
	    ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[0].использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Использование = Ложь;		

		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[8].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[9].Использование = Ложь;
		
	ИначеЕсли ТипОтчета = 4 Тогда
	    ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[0].использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Структура[0].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Использование = Ложь;
		

		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[8].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[9].Использование = Истина;
	
	Иначе
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[0].использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[1].Структура[0].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[2].Использование = Ложь;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура[0].Использование = Ложь;

		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[8].Использование = Истина;
		ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы[9].Использование = Ложь;
	
	КонецЕсли;
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	ВнешнийНаборДанных = Новый Структура("Таблица", Таблица);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Таблица = Неопределено;
КонецПроцедуры  

Функция СформироватьТаблицу() 
	/////////////////
	НачПериода = Период.ДатаНачала;
	КонПериода = Период.ДатаОкончания;
	СчетМЦ08 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.08");
	Счет0101 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("01.01");
	/////////////////
  	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ссылка", );
	Таблица.Колонки.Добавить("Склад", );
	Таблица.Колонки.Добавить("Номенклатура", );
	Таблица.Колонки.Добавить("СуммаОписи", );
	Таблица.Колонки.Добавить("СуммаФакт", );
	Таблица.Колонки.Добавить("ФактКоличество", );
	Таблица.Колонки.Добавить("БухКоличество", );
	Таблица.Колонки.Добавить("ИзлишкиКолво", );
	Таблица.Колонки.Добавить("Излишки", );
	Таблица.Колонки.Добавить("ИзлишкиОтрегулированоЗаСчетЗаписейПриход", );
	Таблица.Колонки.Добавить("ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение", );
	Таблица.Колонки.Добавить("ИзлишкиОтрегулированоЗаСчетЗаписейПересортица", );
	Таблица.Колонки.Добавить("ОкончательныеИзлишки", );
	Таблица.Колонки.Добавить("ОкончательныеИзлишкиКолво", );
	Таблица.Колонки.Добавить("Недостачи", );
	Таблица.Колонки.Добавить("НедостачиКолво", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетПеремещение", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетПересортица", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетРеализации", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетСписаниеНа91", );
	Таблица.Колонки.Добавить("ОкончательныеНедостачи", );
	Таблица.Колонки.Добавить("ОкончательныеНедостачиКолво", );
	Таблица.Колонки.Добавить("ИнвентаризационнаяОпись");
	Таблица.Колонки.Добавить("ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации", );
	Таблица.Колонки.Добавить("НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации", );
	Таблица.Колонки.Добавить("МОЛ", );

	Таблица.Колонки.Добавить("СчетУчета");

     	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", 	НачПериода);
	Запрос.УстановитьПараметр("КонецПериода", 	КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация", 	Организация);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Руководители,
	|	ИнвентаризацияТоваровНаСкладе.Организация КАК Организация,
	|	ИнвентаризацияТоваровНаСкладе.Склад.Представление КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.Склад КАК Склад,
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации1,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер КАК ОснованиеНомер,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ОснованиеДата
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	НЕ ИнвентаризацияТоваровНаСкладе.ПометкаУдаления
	|	И ИнвентаризацияТоваровНаСкладе.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИнвентаризацияТоваровНаСкладе.Организация = &Организация";

	Шапка = Запрос.Выполнить().Выбрать();
	Пока Шапка.Следующий() Цикл
		Запрос.УстановитьПараметр("Курс",            1);
		Запрос.УстановитьПараметр("Кратность",       1);
		Запрос.УстановитьПараметр("ВидСкладаНТТ",    Перечисления.ВидыСкладов.НТТ);
		Запрос.УстановитьПараметр("ТекущийДокумент", Шапка.Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	Товары.НомерСтроки КАК Номер,
		               |	Товары.Номенклатура КАК Номенклатура,
		               |	ПОДСТРОКА(Товары.Номенклатура.НаименованиеПолное, 1, 255) КАК ТоварНаименование,
		               |	Товары.Номенклатура.Код КАК НоменклатураКод,
		               |	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК НоменклатураЕдиницаИзмеренияНаименование,
		               |	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
		               |	Товары.Количество КАК ФактКоличество,
		               |	Товары.КоличествоУчет КАК БухКоличество,
		               |	0 КАК Цена,
		               |	ВЫБОР
		               |		КОГДА Товары.Ссылка.Склад.ТипСклада = &ВидСкладаНТТ
		               |			ТОГДА Товары.Количество * Товары.ЦенаВРознице
		               |		ИНАЧЕ Товары.Сумма * &Курс / &Кратность
		               |	КОНЕЦ КАК ФактСумма,
		               |	ВЫБОР
		               |		КОГДА Товары.Ссылка.Склад.ТипСклада = &ВидСкладаНТТ
		               |			ТОГДА Товары.КоличествоУчет * Товары.ЦенаВРознице
		               |		ИНАЧЕ Товары.СуммаУчет * &Курс / &Кратность
		               |	КОНЕЦ КАК БухСумма
		               |ПОМЕСТИТЬ Товары
		               |ИЗ
		               |	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК Товары
		               |ГДЕ
		               |	Товары.Ссылка = &ТекущийДокумент
		               |	И НЕ Товары.Ссылка.ПометкаУдаления
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(Товары.Номер, 0) КАК Номер,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт > 0
		               |			ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК РегулировкаИзлишекКолво,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		               |				И &Забалансовый
		               |			ТОГДА 0
		               |		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
		               |			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК РегулировкаИзлишекСумма,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		               |				И &Забалансовый
		               |			ТОГДА 0
		               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт > 0
		               |			ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК РегулировкаНедостачаКолво,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		               |				И &Забалансовый
		               |			ТОГДА 0
		               |		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
		               |			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК РегулировкаНедостачаСумма,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотДт <= 0
		               |			ТОГДА """"
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
		               |	КОНЕЦ КАК РегулировкаИзлишекНомерСчета,
		               |	ВЫБОР
		               |		КОГДА ХозрасчетныйОбороты.КоличествоОборотКт <= 0
		               |			ТОГДА """"
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПеремещениеТоваров).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ТребованиеНакладная).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПередачаМатериаловВЭксплуатацию).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ВозвратМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.РеализацияТоваровУслуг).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеМатериаловИзЭксплуатации
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеМатериаловИзЭксплуатации).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.КомплектацияНоменклатуры).Номер
		               |		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
		               |			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.СписаниеТоваров).Номер
		               |	КОНЕЦ КАК РегулировкаНедостачаНомерСчета,
		               |	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
		               |	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
		               |	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ) КАК Период,
		               |	ХозрасчетныйОбороты.КорСчет КАК КорСчет
		               |ПОМЕСТИТЬ ВТОбороты
		               |ИЗ
		               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СписокСчетов),
		               |			&СубконтоНоменклатураСклад,
		               |			Субконто2 = &Склад
		               |				ИЛИ Субконто2 = &СкладИзШапки
		               |				ИЛИ Субконто3 = &Склад
		               |				ИЛИ Субконто3 = &СкладИзШапки,
		               |			,
		               |			) КАК ХозрасчетныйОбороты
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
		               |		ПО ХозрасчетныйОбороты.Субконто1 = Товары.Номенклатура
		               |ГДЕ
		               |	НЕ(ХозрасчетныйОбороты.Счет.Код = ""МЦ.06""
		               |				И ХозрасчетныйОбороты.КорСчет.Код = ""МЦ.04""
		               |				И ХозрасчетныйОбороты.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТОбороты.Номер КАК Номер
		               |ПОМЕСТИТЬ СтрокиСоборотами
		               |ИЗ
		               |	ВТОбороты КАК ВТОбороты
		               |ГДЕ
		               |	ВТОбороты.Номер = 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Товары.Номер КАК Номер,
		               |	Товары.Номенклатура КАК Номенклатура,
		               |	Товары.ТоварНаименование КАК ТоварНаименование,
		               |	Товары.НоменклатураКод КАК НоменклатураКод,
		               |	Товары.НоменклатураЕдиницаИзмеренияНаименование КАК НоменклатураЕдиницаИзмеренияНаименование,
		               |	Товары.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
		               |	Товары.ФактКоличество КАК ФактКоличество,
		               |	Товары.БухКоличество КАК БухКоличество,
		               |	Товары.Цена КАК Цена,
		               |	Товары.ФактСумма КАК ФактСумма,
		               |	Товары.БухСумма КАК БухСумма
		               |ИЗ
		               |	Товары КАК Товары
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтрокиСоборотами КАК СтрокиСоборотами
		               |		ПО Товары.Номер = СтрокиСоборотами.Номер
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТОбороты.Номер КАК Номер,
		               |	ВТОбороты.РегулировкаИзлишекКолво КАК РегулировкаИзлишекКолво,
		               |	ВТОбороты.РегулировкаИзлишекСумма КАК РегулировкаИзлишекСумма,
		               |	ВТОбороты.РегулировкаНедостачаКолво КАК РегулировкаНедостачаКолво,
		               |	ВТОбороты.РегулировкаНедостачаСумма КАК РегулировкаНедостачаСумма,
		               |	ВТОбороты.РегулировкаИзлишекНомерСчета КАК РегулировкаИзлишекНомерСчета,
		               |	ВТОбороты.РегулировкаНедостачаНомерСчета КАК РегулировкаНедостачаНомерСчета,
		               |	ВТОбороты.Номенклатура КАК Номенклатура,
		               |	ВТОбороты.Регистратор КАК Регистратор,
		               |	ВТОбороты.Период КАК Период,
		               |	ВТОбороты.КорСчет КАК КорСчет
		               |ИЗ
		               |	ВТОбороты КАК ВТОбороты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ Товары
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТОбороты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ СтрокиСОборотами";
		СписокСчетов = Новый Массив();
		СубконтоНоменклатураСклад = Новый Массив();
		
		Если Шапка.Ссылка.Товары.Количество() <> 0
			И Шапка.Ссылка.Товары[0].СчетУчета.Забалансовый
			И Шапка.Ссылка.Товары[0].СчетУчета.Код = "МЦ.04.А" Тогда
			СписокСчетов.Добавить(Шапка.Ссылка.Товары[0].СчетУчета);
			
			СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
			СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
			Запрос.УстановитьПараметр("Склад", 			Шапка.Склад);
			Запрос.УстановитьПараметр("Забалансовый",	Истина);
			Запрос.УстановитьПараметр("СкладИзШапки", Неопределено);
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто3 = &Склад ИЛИ Субконто3 = &СкладИзШапки", "ЛОЖЬ");
			
		
		ИначеЕсли Шапка.Ссылка.Товары.Количество() <> 0 
			И Шапка.Ссылка.Товары[0].СчетУчета.Забалансовый Тогда
			СписокСчетов.Добавить(Шапка.Ссылка.Товары[0].СчетУчета);
			СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.06"));
			ОтборСклад = Новый Структура("СтруктурнаяЕдиница", Шапка.Склад);
			Работник = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(Шапка.Дата, ОтборСклад).ФизическоеЛицо;
			Запрос.УстановитьПараметр("Склад", 			Работник);
			Запрос.УстановитьПараметр("Забалансовый",	Истина);
			
			Запрос.УстановитьПараметр("СкладИзШапки",	Шапка.Ссылка.Склад);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СубконтоНоменклатураСклад", "");
			
		Иначе
			СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
			СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
			СписокСчетов.Добавить(ПланыСчетов.Хозрасчетный.Материалы);
			СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
			СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
			Запрос.УстановитьПараметр("Склад", 			Шапка.Склад);
			Запрос.УстановитьПараметр("Забалансовый",	Ложь);
			Запрос.УстановитьПараметр("СкладИзШапки", Неопределено);
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто3 = &Склад ИЛИ Субконто3 = &СкладИзШапки", "ЛОЖЬ");
			
		КонецЕсли; 
		Запрос.УстановитьПараметр("СписокСчетов", 	СписокСчетов);
		Запрос.УстановитьПараметр("СубконтоНоменклатураСклад", СубконтоНоменклатураСклад);
		Запрос.УстановитьПараметр("ТолькоОбороты",	Ложь);
		Запрос.УстановитьПараметр("НачалоПериода", 	КонецДня(Шапка.ДатаДокумента) + 1);
		Запрос.УстановитьПараметр("КонецПериода", 	Новый Граница(КонецДня(Шапка.ДатаНачалаИнвентаризации1), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("КонецПериодаДата", КонецДня(Шапка.ДатаНачалаИнвентаризации1));
		Пакет = Запрос.ВыполнитьПакет();
		ВыборкаСтрокТовары = Пакет[3].Выбрать();
		Если ВыборкаСтрокТовары.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаДокументов  = Пакет[4].Выгрузить();
		ТаблицаДокументов.Индексы.Добавить("Номер");
		ТаблицаДокументов.Индексы.Добавить("Номенклатура");	
		ИтогоФактСумма = 0;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		Ном = 0;
		МассивНоменклатуры = Новый Массив();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
	       	Ном = Ном + 1;
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			Если МассивНоменклатуры.Найти(ВыборкаСтрокТовары.Номенклатура) <> Неопределено Тогда
				Продолжить;
			КонецЕсли; 
			МассивНоменклатуры.Добавить(ВыборкаСтрокТовары.Номенклатура);
			
			Разница     = 0;
			РазницаСумм = 0;
			
			Разница     = ВыборкаСтрокТовары.ФактКоличество - ВыборкаСтрокТовары.БухКоличество;
			РазницаСумм = ВыборкаСтрокТовары.ФактСумма      - ВыборкаСтрокТовары.БухСумма;
			
			Если Разница = 0 Тогда
				РазницаСумм = 0;
			КонецЕсли; 
		
			Если Разница < 0 И РазницаСумм < 0 Тогда
				
				ПараметрыРезультатНедостачаКолво = - Разница;
				ПараметрыРезультатНедостачаСумма = - РазницаСумм;
				ПараметрыРезультатИзлишекКолво   = 0;
				ПараметрыРезультатИзлишекСумма   = 0;
				
			ИначеЕсли Разница < 0 И РазницаСумм >= 0 Тогда
				
				ПараметрыРезультатНедостачаКолво = - Разница;
				ПараметрыРезультатНедостачаСумма = РазницаСумм;
				ПараметрыРезультатИзлишекКолво   = 0;
				ПараметрыРезультатИзлишекСумма   = 0;
				
			ИначеЕсли Разница > 0 И РазницаСумм <= 0 Тогда
				
				ПараметрыРезультатНедостачаКолво = 0;
				ПараметрыРезультатНедостачаСумма = 0;
				ПараметрыРезультатИзлишекКолво   = Разница;
				ПараметрыРезультатИзлишекСумма   = 0;
			Иначе
				
				ПараметрыРезультатНедостачаКолво = 0;
				ПараметрыРезультатНедостачаСумма = 0;
				ПараметрыРезультатИзлишекКолво   = Разница;
				ПараметрыРезультатИзлишекСумма   = РазницаСумм;

			КонецЕсли;
			
			РегулировкаИзлишекНомерСчета 	= "";
			РегулировкаНедостачаНомерСчета 	= "";
			РегулировкаИзлишекКолво 		= 0;
			РегулировкаИзлишекСумма 		= 0;
			РегулировкаНедостачаКолво 		= 0;
			РегулировкаНедостачаСумма 		= 0;
			
			ДвиженияПоДокументам = ?(ВыборкаСтрокТовары.Номер = 0, 
										ТаблицаДокументов.НайтиСтроки(Новый Структура("Номенклатура", ВыборкаСтрокТовары.Номенклатура)),
										ТаблицаДокументов.НайтиСтроки(Новый Структура("Номер", ВыборкаСтрокТовары.Номер)));
										
			//
			ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = 0;
			ИзлишкиОтрегулированоЗаСчетЗаписейПриход 		= 0;
			ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение 	= 0;
			ИзлишкиОтрегулированоЗаСчетЗаписейПересортица 	= 0;
			//
			НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = 0;
			НедостачиОтрегулированоЗаСчетПеремещение 		= 0;
			НедостачиОтрегулированоЗаСчетПересортица 		= 0;
			НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость = 0;
			НедостачиОтрегулированоЗаСчетСписаниеНа91 		= 0;
			НедостачиОтрегулированоЗаСчетРеализации = 0;
			
			//
			Для каждого СтрокаДвижение Из ДвиженияПоДокументам Цикл
				
				Если СтрокаДвижение.РегулировкаИзлишекКолво <> 0 
					И СтрокаДвижение.РегулировкаНедостачаКолво <> 0 Тогда
					
					Если СтрокаДвижение.РегулировкаИзлишекКолво > СтрокаДвижение.РегулировкаНедостачаКолво Тогда
						СтрокаДвижение.РегулировкаИзлишекКолво = СтрокаДвижение.РегулировкаИзлишекКолво - СтрокаДвижение.РегулировкаНедостачаКолво;
						СтрокаДвижение.РегулировкаНедостачаКолво = 0;
					ИначеЕсли СтрокаДвижение.РегулировкаИзлишекКолво < СтрокаДвижение.РегулировкаНедостачаКолво Тогда
						СтрокаДвижение.РегулировкаНедостачаКолво = СтрокаДвижение.РегулировкаНедостачаКолво - СтрокаДвижение.РегулировкаИзлишекКолво;
						СтрокаДвижение.РегулировкаИзлишекКолво = 0;
					Иначе
						СтрокаДвижение.РегулировкаИзлишекКолво = 0;
						СтрокаДвижение.РегулировкаНедостачаКолво = 0;
						Продолжить;
					КонецЕсли;
					
				КонецЕсли;
				
				Если ПараметрыРезультатИзлишекСумма = 0 
					И ПараметрыРезультатНедостачаСумма = 0 Тогда
				
					СтрокаДвижение.РегулировкаИзлишекСумма = 0;
					СтрокаДвижение.РегулировкаНедостачаСумма = 0;
				
				КонецЕсли; 
				
				Если СтрокаДвижение.РегулировкаИзлишекКолво > 0 Тогда
					
					
						Если ПараметрыРезультатИзлишекКолво > РегулировкаИзлишекКолво Тогда
							
							Разница = ПараметрыРезультатИзлишекКолво - РегулировкаИзлишекКолво;
							РегулировкаИзлишекКолво = РегулировкаИзлишекКолво + ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекКолво, Разница);
							РегулировкаИзлишекСумма = РегулировкаИзлишекСумма + ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
							
							Если ЗначениеЗаполнено(Шапка.ДатаНачалаИнвентаризации1) 
								И СтрокаДвижение.Период <= Шапка.ДатаНачалаИнвентаризации1 Тогда
								ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации
									+ ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
							КонецЕсли; 
									
							Если ПараметрыРезультатИзлишекКолво = РегулировкаИзлишекКолво 
								И ПараметрыРезультатИзлишекСумма <> 0 Тогда
								РегулировкаИзлишекСумма = ПараметрыРезультатИзлишекСумма;
								
								Если ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда	
									ИзлишкиОтрегулированоЗаСчетЗаписейПриход = РегулировкаИзлишекСумма;	
								ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
									ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение = РегулировкаИзлишекСумма;
								ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
									ИзлишкиОтрегулированоЗаСчетЗаписейПересортица = РегулировкаИзлишекСумма;
								КонецЕсли;
								
								
							Иначе 
							
								Если ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
									
									ИзлишкиОтрегулированоЗаСчетЗаписейПриход = ИзлишкиОтрегулированоЗаСчетЗаписейПриход 
									+ ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
									
								ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
									
									ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение = ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение 
									+ ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
									
								ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
									
									ИзлишкиОтрегулированоЗаСчетЗаписейПересортица = ИзлишкиОтрегулированоЗаСчетЗаписейПересортица 
									+ ?(СтрокаДвижение.РегулировкаИзлишекКолво < Разница, СтрокаДвижение.РегулировкаИзлишекСумма, СтрокаДвижение.РегулировкаИзлишекСумма / СтрокаДвижение.РегулировкаИзлишекКолво * Разница);
									
								КонецЕсли;
								
							КонецЕсли;
					
					
					КонецЕсли;
				ИначеЕсли СтрокаДвижение.РегулировкаНедостачаКолво > 0 Тогда
					
					Если ПараметрыРезультатНедостачаКолво > РегулировкаНедостачаКолво Тогда
						
						Разница = ПараметрыРезультатНедостачаКолво - РегулировкаНедостачаКолво;
						РегулировкаНедостачаКолво = РегулировкаНедостачаКолво + ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаКолво, Разница);
						РегулировкаНедостачаСумма = РегулировкаНедостачаСумма + ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница);
						
						Если ЗначениеЗаполнено(Шапка.ДатаНачалаИнвентаризации1) 
							И СтрокаДвижение.Период <= Шапка.ДатаНачалаИнвентаризации1 Тогда
							НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница);
						КонецЕсли; 
						
						Если ПараметрыРезультатНедостачаКолво = РегулировкаНедостачаКолво 
							И ПараметрыРезультатНедостачаСумма <> 0 Тогда
							РегулировкаНедостачаСумма = ПараметрыРезультатНедостачаСумма;
						КонецЕсли;
						
						Если ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
							НедостачиОтрегулированоЗаСчетРеализации = НедостачиОтрегулированоЗаСчетРеализации 
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница)
						
						ИначеЕсли Лев(СтрокаДвижение.КорСчет.Код, 2) = "91" Тогда
							НедостачиОтрегулированоЗаСчетСписаниеНа91 = НедостачиОтрегулированоЗаСчетСписаниеНа91 
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница)
						
						ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
							НедостачиОтрегулированоЗаСчетПеремещение = НедостачиОтрегулированоЗаСчетПеремещение 
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница)
								
						ИначеЕсли ТипЗнч(СтрокаДвижение.Регистратор) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
							НедостачиОтрегулированоЗаСчетПересортица = НедостачиОтрегулированоЗаСчетПересортица 
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница)
								
						Иначе
							НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость = НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость 
								+ ?(СтрокаДвижение.РегулировкаНедостачаКолво < Разница, СтрокаДвижение.РегулировкаНедостачаСумма, СтрокаДвижение.РегулировкаНедостачаСумма / СтрокаДвижение.РегулировкаНедостачаКолво * Разница)
								
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли; 
				
			КонецЦикла;
			
			// Окончательные результаты
			СписаниеНедостачКолонка1Колво = 0;
			СписаниеНедостачКолонка2Колво = 0;
			СписаниеНедостачКолонка1Сумма = 0;
			СписаниеНедостачКолонка2Сумма = 0;
			
			СписаниеНедостачКолонка1Колво = ПараметрыРезультатИзлишекКолво - РегулировкаИзлишекКолво;
			Если СписаниеНедостачКолонка1Колво < 0 Тогда
				СписаниеНедостачКолонка2Колво = -СписаниеНедостачКолонка1Колво;
				СписаниеНедостачКолонка1Колво = 0;
			КонецЕсли; 
			СписаниеНедостачКолонка1Сумма = ПараметрыРезультатИзлишекСумма - РегулировкаИзлишекСумма;
			Если СписаниеНедостачКолонка1Сумма < 0 Тогда
				СписаниеНедостачКолонка2Сумма = -СписаниеНедостачКолонка1Сумма;
				СписаниеНедостачКолонка1Сумма = 0;
			КонецЕсли; 
			
			СписаниеНедостачКолонка2Колво = СписаниеНедостачКолонка2Колво + ПараметрыРезультатНедостачаКолво - РегулировкаНедостачаКолво;
			Если СписаниеНедостачКолонка2Колво < 0 Тогда
				СписаниеНедостачКолонка1Колво = СписаниеНедостачКолонка1Колво - СписаниеНедостачКолонка2Колво;
				СписаниеНедостачКолонка2Колво = 0;
			КонецЕсли; 
			СписаниеНедостачКолонка2Сумма = СписаниеНедостачКолонка2Сумма + ПараметрыРезультатНедостачаСумма - РегулировкаНедостачаСумма;
			Если СписаниеНедостачКолонка2Сумма < 0 Тогда
				СписаниеНедостачКолонка1Сумма = СписаниеНедостачКолонка1Сумма - СписаниеНедостачКолонка2Сумма;
				СписаниеНедостачКолонка2Сумма = 0;		
			КонецЕсли; 
			Если СписаниеНедостачКолонка1Колво = 0 Тогда
				СписаниеНедостачКолонка1Сумма = 0;	
			КонецЕсли; 
			Если СписаниеНедостачКолонка2Колво = 0 Тогда
				СписаниеНедостачКолонка2Сумма = 0;
			КонецЕсли; 
			
			
			ПараметрыРегулировкаИзлишекКолво = РегулировкаИзлишекКолво;
			ПараметрыРегулировкаИзлишекСумма = РегулировкаИзлишекСумма;
			ПараметрыРегулировкаНедостачаКолво = РегулировкаНедостачаКолво;
			ПараметрыРегулировкаНедостачаСумма = РегулировкаНедостачаСумма;
			ПараметрыРегулировкаИзлишекНомерСчета = РегулировкаИзлишекНомерСчета;
			ПараметрыРегулировкаНедостачаНомерСчета = РегулировкаНедостачаНомерСчета;
			
			ПараметрыСписаниеНедостачКолонка1Колво = СписаниеНедостачКолонка1Колво;
			ПараметрыСписаниеНедостачКолонка1Сумма = СписаниеНедостачКолонка1Сумма;
			ПараметрыСписаниеНедостачКолонка2Колво = СписаниеНедостачКолонка2Колво;
			ПараметрыСписаниеНедостачКолонка2Сумма = СписаниеНедостачКолонка2Сумма;
			
			Строка = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(Строка, Шапка);
			ЗаполнитьЗначенияСвойств(Строка, ВыборкаСтрокТовары);
			Строка.СуммаОписи = ВыборкаСтрокТовары.БухСумма;
			Строка.СуммаФакт = ВыборкаСтрокТовары.ФактСумма;
			Строка.СчетУчета = Шапка.Ссылка.Товары[Ном-1].СчетУчета.Код;
			
			Строка.Излишки = ПараметрыРезультатИзлишекСумма;
			Строка.ИзлишкиКолво = ПараметрыРезультатИзлишекКолво;
			Строка.ИзлишкиОтрегулированоЗаСчетЗаписейПриход = ИзлишкиОтрегулированоЗаСчетЗаписейПриход;
			Строка.ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение = ИзлишкиОтрегулированоЗаСчетЗаписейПеремещение;
			Строка.ИзлишкиОтрегулированоЗаСчетЗаписейПересортица = ИзлишкиОтрегулированоЗаСчетЗаписейПересортица;
			Строка.ОкончательныеИзлишки = ПараметрыСписаниеНедостачКолонка1Сумма;
			Строка.ОкончательныеИзлишкиКолво = ПараметрыСписаниеНедостачКолонка1Колво;
			
			Строка.Недостачи = ПараметрыРезультатНедостачаСумма;
			Строка.НедостачиКолво = ПараметрыРезультатНедостачаКолво;
			Строка.НедостачиОтрегулированоЗаСчетПеремещение = НедостачиОтрегулированоЗаСчетПеремещение;
			Строка.НедостачиОтрегулированоЗаСчетПересортица = НедостачиОтрегулированоЗаСчетПересортица;
			Строка.НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость = НедостачиОтрегулированоЗаСчетСписаниеНаСебестоимость;
			Строка.НедостачиОтрегулированоЗаСчетСписаниеНа91 = НедостачиОтрегулированоЗаСчетСписаниеНа91;
			Строка.НедостачиОтрегулированоЗаСчетРеализации = НедостачиОтрегулированоЗаСчетРеализации;
			Строка.ОкончательныеНедостачи = ПараметрыСписаниеНедостачКолонка2Сумма;
			Строка.ОкончательныеНедостачиКолво = ПараметрыСписаниеНедостачКолонка2Колво;

			Строка.ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации;
			Строка.НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации;
			
		КонецЦикла
	КонецЦикла;	
	//////////////////////////////////////////////////////////////////////////////////////////////////
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", 			НачПериода);
	Запрос.УстановитьПараметр("КонецПериода", 			КонецДня(КонПериода));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияОС.Номер КАК НомерДокумента,
	|	ИнвентаризацияОС.Дата КАК ДатаДокумента,
	|	ИнвентаризацияОС.Дата КАК Дата,
	|	ИнвентаризацияОС.Дата КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.Организация КАК Руководители,
	|	ИнвентаризацияОС.Организация КАК Организация,
	|	ИнвентаризацияОС.Ссылка КАК Ссылка,
	|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации1,
	|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ОснованиеНомер,
	|	ИнвентаризацияОС.ДокументОснованиеДата КАК ОснованиеДата
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
	|ГДЕ
	|	НЕ ИнвентаризацияОС.ПометкаУдаления
	|	И ИнвентаризацияОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИнвентаризацияОС.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", 	Организация);

	Результат =   Запрос.Выполнить();
	Шапка = Результат.Выбрать();
	Табл = Результат.Выгрузить();
    Пока Шапка.Следующий() Цикл
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("СписокСчетов",ПланыСчетов.Хозрасчетный.НайтиПоКоду("МЦ.08"));
		Запрос.УстановитьПараметр("СубконтоОсновноеСредство", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		Запрос.УстановитьПараметр("Ссылка",      Шапка.Ссылка);
		Запрос.УстановитьПараметр("Организация", Шапка.Организация);
		Запрос.УстановитьПараметр("Дата",        Шапка.Дата);
		Запрос.УстановитьПараметр("НачалоПериода", 	КонецДня(Шапка.Дата) + 1);
		Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецДня(Шапка.ДатаНачалаИнвентаризации)));	
		Запрос.УстановитьПараметр("КонецПериодаДата",КонецДня(Шапка.ДатаНачалаИнвентаризации));
        Запрос.Текст ="ВЫБРАТЬ
                      |	ИнвентаризацияОСОС.НомерСтроки КАК НомерСтроки,
                      |	ИнвентаризацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
                      |	ВЫБОР
                      |		КОГДА ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
                      |			ТОГДА ИнвентаризацияОСОС.ОсновноеСредство.Наименование
                      |		ИНАЧЕ ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное
                      |	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
                      |	ИнвентаризацияОСОС.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
                      |	ИнвентаризацияОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
                      |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
                      |	ИнвентаризацияОСОС.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
                      |	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
                      |	ИнвентаризацияОСОС.СтоимостьФактическая КАК СтоимостьФактическая,
                      |	ВЫБОР
                      |		КОГДА ИнвентаризацияОСОС.СтоимостьПоДаннымУчета > 0
                      |			ТОГДА 1
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК НаличиеПоДаннымУчета,
                      |	ВЫБОР
                      |		КОГДА ИнвентаризацияОСОС.СтоимостьФактическая > 0
                      |			ТОГДА 1
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК НаличиеФактическое,
                      |	ИнвентаризацияОСОС.Ссылка.игс_Склад КАК Склад,
                      |	ИнвентаризацияОСОС.Ссылка КАК Ссылка
                      |ПОМЕСТИТЬ Товары
                      |ИЗ
                      |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
                      |		ПО ИнвентаризацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет КАК МестонахождениеОСБухгалтерскийУчет
                      |		ПО ИнвентаризацияОСОС.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство
                      |ГДЕ
                      |	НЕ ИнвентаризацияОСОС.Ссылка.ПометкаУдаления
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	Товары.НомерСтроки КАК НомерСтроки,
                      |	Товары.ОсновноеСредство КАК ОсновноеСредство,
                      |	Товары.ОсновноеСредствоНаименованиеПолное КАК ОсновноеСредствоНаименованиеПолное,
                      |	Товары.ДатаВыпуска КАК ДатаВыпуска,
                      |	Товары.ЗаводскойНомер КАК ЗаводскойНомер,
                      |	Товары.ИнвентарныйНомер КАК ИнвентарныйНомер,
                      |	Товары.НомерПаспорта КАК НомерПаспорта,
                      |	Товары.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
                      |	Товары.СтоимостьФактическая КАК СтоимостьФактическая,
                      |	Товары.НаличиеПоДаннымУчета КАК НаличиеПоДаннымУчета,
                      |	Товары.НаличиеФактическое КАК НаличиеФактическое,
                      |	Товары.Склад КАК Склад,
                      |	Товары.Ссылка КАК Ссылка,
                      |	Товары.Ссылка.ОтветственноеЛицо КАК МОЛ
                      |ИЗ
                      |	Товары КАК Товары
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |ВЫБРАТЬ
                      |	Товары.НомерСтроки КАК НомерСтроки,
                      |	ВЫБОР
                      |		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
                      |			ТОГДА 1
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК РегулировкаИзлишекКолво,
                      |	ВЫБОР
                      |		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
                      |			ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК РегулировкаИзлишекСумма,
                      |	ВЫБОР
                      |		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
                      |			ТОГДА 1
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК РегулировкаНедостачаКолво,
                      |	ВЫБОР
                      |		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
                      |			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
                      |		ИНАЧЕ 0
                      |	КОНЕЦ КАК РегулировкаНедостачаСумма,
                      |	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
                      |	ХозрасчетныйОбороты.Субконто1 КАК ОсновноеСредство
                      |ИЗ
                      |	РегистрБухгалтерии.Хозрасчетный.Обороты(
                      |			&НачалоПериода,
                      |			&КонецПериода,
                      |			Регистратор,
                      |			Счет = &СписокСчетов,
                      |			&СубконтоОсновноеСредство,
                      |			Субконто1 В
                      |				(ВЫБРАТЬ
                      |					Товары.ОсновноеСредство
                      |				ИЗ
                      |					Товары КАК Товары),
                      |			,
                      |			) КАК ХозрасчетныйОбороты
                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
                      |		ПО ХозрасчетныйОбороты.Субконто1 = Товары.ОсновноеСредство
                      |;
                      |
                      |////////////////////////////////////////////////////////////////////////////////
                      |УНИЧТОЖИТЬ Товары";
		Пакет 				= Запрос.ВыполнитьПакет();
		ТаблицаОС 			= Пакет[1].Выгрузить();
		ТаблицаДокументов	= Пакет[2].Выгрузить();
		
		Для Каждого СтрокаОС Из ТаблицаОС Цикл
			
			СтрокаТаблицы 			= Таблица.Добавить();
			СтрокаТаблицы.Ссылка 	= Шапка.Ссылка;
			СтрокаТаблицы.Склад 	= СтрокаОС.Склад;
			СтрокаТаблицы.Номенклатура = СтрокаОС.ОсновноеСредство;
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОС);
			СтрокаТаблицы.ФактКоличество = СтрокаОС.НаличиеФактическое;
			СтрокаТаблицы.БухКоличество = СтрокаОС.НаличиеПоДаннымУчета;
			СтрокаТаблицы.СуммаОписи= СтрокаОС.СтоимостьПоДаннымУчета;
			СтрокаТаблицы.СуммаФакт = СтрокаОС.СтоимостьФактическая;
			СтрокаТаблицы.СчетУчета 	 = СчетМЦ08;
			РазницаПоНаличию   		= СтрокаОС.НаличиеФактическое - СтрокаОС.НаличиеПоДаннымУчета;
			РазницаПоСтоимости 		= СтрокаОС.СтоимостьФактическая - СтрокаОС.СтоимостьПоДаннымУчета;
			
			ИзлишекКоличество   	= ?(РазницаПоНаличию > 0, РазницаПоНаличию, 0);
			ИзлишекСтоимость    	= ?(РазницаПоСтоимости > 0, РазницаПоСтоимости, 0);
			НедостачаКоличество 	= ?(РазницаПоНаличию < 0, -РазницаПоНаличию, 0);
			НедостачаСтоимость  	= ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);
			
			СтрокаТаблицы.ИзлишкиКолво   	= ИзлишекКоличество;
			СтрокаТаблицы.Излишки     		= ИзлишекСтоимость;
			СтрокаТаблицы.НедостачиКолво 	= НедостачаКоличество;
			СтрокаТаблицы.Недостачи  		= НедостачаСтоимость;
			
			РегулировкаИзлишекНомерСчета 	= "";
			РегулировкаНедостачаНомерСчета 	= "";
			РегулировкаИзлишекКолво 		= 0;
			РегулировкаИзлишекСумма 		= 0;
			РегулировкаНедостачаКолво 		= 0;
			РегулировкаНедостачаСумма 		= 0;
			
			ДвиженияПоДокументам = ТаблицаДокументов.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаОС.НомерСтроки));
			
			Для каждого СтрокаДвижение Из ДвиженияПоДокументам Цикл
				
				Если СтрокаТаблицы.ИзлишекСтоимость <> 0 Тогда
					РегулировкаИзлишекСумма 	= РегулировкаИзлишекСумма 	 + СтрокаДвижение.РегулировкаИзлишекСумма;
					
					Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекСумма)
						ИЛИ ЗначениеЗаполнено(СтрокаДвижение.РегулировкаИзлишекКолво) Тогда
						РегулировкаИзлишекКолво = РегулировкаИзлишекКолво + 1;
					КонецЕсли;
					
				КонецЕсли; 
				
				Если СтрокаТаблицы.НедостачаСтоимость <> 0 Тогда
					РегулировкаНедостачаСумма 	= РегулировкаНедостачаСумма  + СтрокаДвижение.РегулировкаНедостачаСумма;
					
					Если ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаСумма)
						ИЛИ ЗначениеЗаполнено(СтрокаДвижение.РегулировкаНедостачаКолво) Тогда
						РегулировкаНедостачаКолво = РегулировкаНедостачаКолво + 1;
					КонецЕсли;
					
				КонецЕсли; 				
				
			КонецЦикла; 
			
			//
			СтрокаТаблицы.ОкончательныеИзлишки			= ИзлишекСтоимость - РегулировкаИзлишекСумма;
			СтрокаТаблицы.ОкончательныеИзлишкиКолво		= ИзлишекКоличество - РегулировкаИзлишекКолво;
			СтрокаТаблицы.ОкончательныеНедостачиКолво		= НедостачаКоличество - РегулировкаНедостачаКолво;
			СтрокаТаблицы.ОкончательныеНедостачи 	= НедостачаСтоимость - РегулировкаНедостачаСумма;
			СтрокаТаблицы.ИзлишкиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = РегулировкаИзлишекКолво;
			СтрокаТаблицы.НедостачиОтрегулированоЗаСчетЗаписейДоНачалаИнвентаризации = РегулировкаНедостачаКолво;
			
		КонецЦикла;
		
	КонецЦикла;
    	Для каждого Строка Из Таблица Цикл
		
		Строка.ИнвентаризационнаяОпись = ?(ТипЗнч(Строка.Ссылка) = Тип("ДокументСсылка.ИнвентаризацияОС"), "ОС", "ТМЦ");
	
	КонецЦикла; 
	
	Возврат Таблица;
		
	КонецФункции
